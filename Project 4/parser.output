Nonterminals useless in grammar

    ConditionVar


Rules useless in grammar

   98 ConditionVar: NUMBER
   99             | ID
  100             | FLOATNUM
  101             | CHARID


Rules useless in parser due to conflicts

   37 StmtList: Expr


State 0 conflicts: 9 shift/reduce
State 12 conflicts: 9 shift/reduce, 1 reduce/reduce
State 16 conflicts: 4 shift/reduce, 11 reduce/reduce
State 40 conflicts: 11 reduce/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 69 conflicts: 2 shift/reduce
State 99 conflicts: 11 reduce/reduce
State 108 conflicts: 2 shift/reduce
State 156 conflicts: 1 shift/reduce
State 159 conflicts: 8 shift/reduce
State 174 conflicts: 8 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FuncDecl
    5     | VarDecl
    6     | StmtList
    7     | IfStmt

    8 $@1: ε

    9 FuncDecl: VOID ID LPAREN $@1 ParamDeclList RPAREN Block

   10 $@2: ε

   11 FuncDecl: INT ID LPAREN $@2 ParamDeclList RPAREN Block

   12 $@3: ε

   13 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList RPAREN Block

   14 $@4: ε

   15 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList RPAREN Block

   16 ParamDeclList: ParamDecl COMMA ParamDeclList
   17              | ParamDecl

   18 ParamDecl: ε
   19          | INT ID
   20          | FLOAT ID
   21          | CHAR ID

   22 ArgDeclList: ArgDecl COMMA ArgDeclList
   23            | ArgDecl

   24 ArgDecl: ε
   25        | NUMBER
   26        | FLOATNUM
   27        | CHARID
   28        | ID

   29 Block: LBRACKET BlockDeclList RBRACKET

   30 BlockDeclList: BlockDecl BlockDeclList
   31              | BlockDecl

   32 BlockDecl: VarDecl
   33          | StmtList
   34          | IfStmt

   35 StmtList: ε
   36         | Expr StmtList
   37         | Expr

   38 VarDecl: INT ID SEMICOLON
   39        | ID EQ NUMBER SEMICOLON
   40        | CHAR ID SEMICOLON
   41        | ID EQ CHARID SEMICOLON
   42        | FLOAT ID SEMICOLON
   43        | ID EQ FLOATNUM SEMICOLON
   44        | ID EQ ID SEMICOLON
   45        | IDEQExpr SEMICOLON
   46        | ArrDecl

   47 Expr: SEMICOLON
   48     | ID EQ ID SEMICOLON
   49     | ID EQ ID LPAREN ArgDeclList RPAREN SEMICOLON
   50     | WRITE ID SEMICOLON
   51     | WRITE STRINGID SEMICOLON
   52     | WRITE ID LBRACE NUMBER RBRACE SEMICOLON
   53     | WRITE NEWLINECHAR SEMICOLON
   54     | IDEQExpr SEMICOLON
   55     | ID LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON
   56     | ID LBRACE NUMBER RBRACE EQ Math SEMICOLON
   57     | ID LBRACE NUMBER RBRACE EQ CHARID SEMICOLON
   58     | ID LPAREN ArgDeclList RPAREN SEMICOLON
   59     | RETURN ID SEMICOLON
   60     | RETURN NUMBER SEMICOLON
   61     | RETURN FLOATNUM SEMICOLON
   62     | RETURN CHARID SEMICOLON

   63 IDEQExpr: ID EQ MathStmt

   64 MathStmt: Math MathStmt
   65         | Math

   66 Math: LPAREN
   67     | RPAREN
   68     | ID
   69     | NUMBER
   70     | FLOATNUM
   71     | EXPONENT
   72     | Operator

   73 Operator: ADD
   74         | SUB
   75         | MULTIPLY
   76         | DIV

   77 CompOperator: DEQ
   78             | LT
   79             | GT
   80             | LEQ
   81             | GEQ
   82             | NOTEQ

   83 ArrDecl: INT ID LBRACE RBRACE SEMICOLON
   84        | CHAR ID LBRACE RBRACE SEMICOLON
   85        | INT ID LBRACE NUMBER RBRACE SEMICOLON
   86        | CHAR ID LBRACE NUMBER RBRACE SEMICOLON

   87 $@5: ε

   88 $@6: ε

   89 $@7: ε

   90 IfStmt: IF $@5 LPAREN Condition RPAREN $@6 Block $@7 ElseStmt

   91 ElseStmt: ε
   92         | ELSE Block

   93 Condition: NUMBER CompOperator NUMBER
   94          | ID CompOperator ID
   95          | ID CompOperator NUMBER
   96          | FLOATNUM CompOperator FLOATNUM
   97          | CHARID CompOperator CHARID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <string> (258) 13 21 40 84 86
    INT <string> (259) 11 19 38 83 85
    FLOAT <string> (260) 15 20 42
    VOID <string> (261) 9
    IF <string> (262) 90
    ELSE <string> (263) 92
    WRITE <string> (264) 50 51 52 53
    RETURN <string> (265) 59 60 61 62
    COMMA <string> (266) 16 22
    SEMICOLON <string> (267) 38 39 40 41 42 43 44 45 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 83 84 85 86
    NEWLINECHAR <string> (268) 53
    DEQ <string> (269) 77
    NOTEQ <string> (270) 82
    LEQ <string> (271) 80
    GEQ <string> (272) 81
    LT <string> (273) 78
    GT <string> (274) 79
    EQ <string> (275) 39 41 43 44 48 49 55 56 57 63
    ADD <string> (276) 73
    MULTIPLY <string> (277) 75
    SUB <string> (278) 74
    DIV <string> (279) 76
    EXPONENT <string> (280) 71
    LPAREN <string> (281) 9 11 13 15 49 58 66 90
    RPAREN <string> (282) 9 11 13 15 49 58 67 90
    LBRACKET <string> (283) 29
    RBRACKET <string> (284) 29
    LBRACE <string> (285) 52 55 56 57 83 84 85 86
    RBRACE <string> (286) 52 55 56 57 83 84 85 86
    NUMBER <string> (287) 25 39 52 55 56 57 60 69 85 86 93 95
    FLOATNUM <string> (288) 26 43 61 70 96
    STRINGID <string> (289) 51
    CHARID <string> (290) 27 41 57 62 97
    ID <string> (291) 9 11 13 15 19 20 21 28 38 39 40 41 42 43 44 48 49 50 52 55 56 57 58 59 63 68 83 84 85 86 94 95


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    Program <ast> (38)
        on left: 1
        on right: 0
    DeclList <ast> (39)
        on left: 2 3
        on right: 1 2
    Decl <ast> (40)
        on left: 4 5 6 7
        on right: 2 3
    FuncDecl <ast> (41)
        on left: 9 11 13 15
        on right: 4
    $@1 (42)
        on left: 8
        on right: 9
    $@2 (43)
        on left: 10
        on right: 11
    $@3 (44)
        on left: 12
        on right: 13
    $@4 (45)
        on left: 14
        on right: 15
    ParamDeclList <ast> (46)
        on left: 16 17
        on right: 9 11 13 15 16
    ParamDecl <ast> (47)
        on left: 18 19 20 21
        on right: 16 17
    ArgDeclList <ast> (48)
        on left: 22 23
        on right: 22 49 58
    ArgDecl <ast> (49)
        on left: 24 25 26 27 28
        on right: 22 23
    Block <ast> (50)
        on left: 29
        on right: 9 11 13 15 90 92
    BlockDeclList <ast> (51)
        on left: 30 31
        on right: 29 30
    BlockDecl <ast> (52)
        on left: 32 33 34
        on right: 30 31
    StmtList <ast> (53)
        on left: 35 36 37
        on right: 6 33 36
    VarDecl <ast> (54)
        on left: 38 39 40 41 42 43 44 45 46
        on right: 5 32
    Expr <ast> (55)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
        on right: 36 37
    IDEQExpr <ast> (56)
        on left: 63
        on right: 45 54
    MathStmt <ast> (57)
        on left: 64 65
        on right: 63 64
    Math <ast> (58)
        on left: 66 67 68 69 70 71 72
        on right: 56 64 65
    Operator <ast> (59)
        on left: 73 74 75 76
        on right: 72
    CompOperator <ast> (60)
        on left: 77 78 79 80 81 82
        on right: 93 94 95 96 97
    ArrDecl <ast> (61)
        on left: 83 84 85 86
        on right: 46
    IfStmt <ast> (62)
        on left: 90
        on right: 7 34
    $@5 (63)
        on left: 87
        on right: 90
    $@6 (64)
        on left: 88
        on right: 90
    $@7 (65)
        on left: 89
        on right: 90
    ElseStmt <ast> (66)
        on left: 91 92
        on right: 90
    Condition <ast> (67)
        on left: 93 94 95 96 97
        on right: 90


State 0

    0 $accept: • Program $end

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    VOID       shift, and go to state 4
    IF         shift, and go to state 5
    WRITE      shift, and go to state 6
    RETURN     shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    ID         shift, and go to state 9

    CHAR       [reduce using rule 35 (StmtList)]
    INT        [reduce using rule 35 (StmtList)]
    FLOAT      [reduce using rule 35 (StmtList)]
    VOID       [reduce using rule 35 (StmtList)]
    IF         [reduce using rule 35 (StmtList)]
    WRITE      [reduce using rule 35 (StmtList)]
    RETURN     [reduce using rule 35 (StmtList)]
    SEMICOLON  [reduce using rule 35 (StmtList)]
    ID         [reduce using rule 35 (StmtList)]
    $default   reduce using rule 35 (StmtList)

    Program   go to state 10
    DeclList  go to state 11
    Decl      go to state 12
    FuncDecl  go to state 13
    StmtList  go to state 14
    VarDecl   go to state 15
    Expr      go to state 16
    IDEQExpr  go to state 17
    ArrDecl   go to state 18
    IfStmt    go to state 19


State 1

   13 FuncDecl: CHAR • ID LPAREN $@3 ParamDeclList RPAREN Block
   40 VarDecl: CHAR • ID SEMICOLON
   84 ArrDecl: CHAR • ID LBRACE RBRACE SEMICOLON
   86        | CHAR • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 20


State 2

   11 FuncDecl: INT • ID LPAREN $@2 ParamDeclList RPAREN Block
   38 VarDecl: INT • ID SEMICOLON
   83 ArrDecl: INT • ID LBRACE RBRACE SEMICOLON
   85        | INT • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 21


State 3

   15 FuncDecl: FLOAT • ID LPAREN $@4 ParamDeclList RPAREN Block
   42 VarDecl: FLOAT • ID SEMICOLON

    ID  shift, and go to state 22


State 4

    9 FuncDecl: VOID • ID LPAREN $@1 ParamDeclList RPAREN Block

    ID  shift, and go to state 23


State 5

   90 IfStmt: IF • $@5 LPAREN Condition RPAREN $@6 Block $@7 ElseStmt

    $default  reduce using rule 87 ($@5)

    $@5  go to state 24


State 6

   50 Expr: WRITE • ID SEMICOLON
   51     | WRITE • STRINGID SEMICOLON
   52     | WRITE • ID LBRACE NUMBER RBRACE SEMICOLON
   53     | WRITE • NEWLINECHAR SEMICOLON

    NEWLINECHAR  shift, and go to state 25
    STRINGID     shift, and go to state 26
    ID           shift, and go to state 27


State 7

   59 Expr: RETURN • ID SEMICOLON
   60     | RETURN • NUMBER SEMICOLON
   61     | RETURN • FLOATNUM SEMICOLON
   62     | RETURN • CHARID SEMICOLON

    NUMBER    shift, and go to state 28
    FLOATNUM  shift, and go to state 29
    CHARID    shift, and go to state 30
    ID        shift, and go to state 31


State 8

   47 Expr: SEMICOLON •

    $default  reduce using rule 47 (Expr)


State 9

   39 VarDecl: ID • EQ NUMBER SEMICOLON
   41        | ID • EQ CHARID SEMICOLON
   43        | ID • EQ FLOATNUM SEMICOLON
   44        | ID • EQ ID SEMICOLON
   48 Expr: ID • EQ ID SEMICOLON
   49     | ID • EQ ID LPAREN ArgDeclList RPAREN SEMICOLON
   55     | ID • LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON
   56     | ID • LBRACE NUMBER RBRACE EQ Math SEMICOLON
   57     | ID • LBRACE NUMBER RBRACE EQ CHARID SEMICOLON
   58     | ID • LPAREN ArgDeclList RPAREN SEMICOLON
   63 IDEQExpr: ID • EQ MathStmt

    EQ      shift, and go to state 32
    LPAREN  shift, and go to state 33
    LBRACE  shift, and go to state 34


State 10

    0 $accept: Program • $end

    $end  shift, and go to state 35


State 11

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 12

    2 DeclList: Decl • DeclList
    3         | Decl •

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    VOID       shift, and go to state 4
    IF         shift, and go to state 5
    WRITE      shift, and go to state 6
    RETURN     shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    ID         shift, and go to state 9

    $end       reduce using rule 3 (DeclList)
    $end       [reduce using rule 35 (StmtList)]
    CHAR       [reduce using rule 35 (StmtList)]
    INT        [reduce using rule 35 (StmtList)]
    FLOAT      [reduce using rule 35 (StmtList)]
    VOID       [reduce using rule 35 (StmtList)]
    IF         [reduce using rule 35 (StmtList)]
    WRITE      [reduce using rule 35 (StmtList)]
    RETURN     [reduce using rule 35 (StmtList)]
    SEMICOLON  [reduce using rule 35 (StmtList)]
    ID         [reduce using rule 35 (StmtList)]
    $default   reduce using rule 3 (DeclList)

    DeclList  go to state 36
    Decl      go to state 12
    FuncDecl  go to state 13
    StmtList  go to state 14
    VarDecl   go to state 15
    Expr      go to state 16
    IDEQExpr  go to state 17
    ArrDecl   go to state 18
    IfStmt    go to state 19


State 13

    4 Decl: FuncDecl •

    $default  reduce using rule 4 (Decl)


State 14

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 15

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 16

   36 StmtList: Expr • StmtList
   37         | Expr •

    WRITE      shift, and go to state 6
    RETURN     shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    ID         shift, and go to state 37

    $end       reduce using rule 35 (StmtList)
    $end       [reduce using rule 37 (StmtList)]
    CHAR       reduce using rule 35 (StmtList)
    CHAR       [reduce using rule 37 (StmtList)]
    INT        reduce using rule 35 (StmtList)
    INT        [reduce using rule 37 (StmtList)]
    FLOAT      reduce using rule 35 (StmtList)
    FLOAT      [reduce using rule 37 (StmtList)]
    VOID       reduce using rule 35 (StmtList)
    VOID       [reduce using rule 37 (StmtList)]
    IF         reduce using rule 35 (StmtList)
    IF         [reduce using rule 37 (StmtList)]
    WRITE      [reduce using rule 35 (StmtList)]
    WRITE      [reduce using rule 37 (StmtList)]
    RETURN     [reduce using rule 35 (StmtList)]
    RETURN     [reduce using rule 37 (StmtList)]
    SEMICOLON  [reduce using rule 35 (StmtList)]
    SEMICOLON  [reduce using rule 37 (StmtList)]
    RBRACKET   reduce using rule 35 (StmtList)
    RBRACKET   [reduce using rule 37 (StmtList)]
    ID         [reduce using rule 35 (StmtList)]
    ID         [reduce using rule 37 (StmtList)]
    $default   reduce using rule 35 (StmtList)

    StmtList  go to state 38
    Expr      go to state 16
    IDEQExpr  go to state 39


State 17

   45 VarDecl: IDEQExpr • SEMICOLON
   54 Expr: IDEQExpr • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 18

   46 VarDecl: ArrDecl •

    $default  reduce using rule 46 (VarDecl)


State 19

    7 Decl: IfStmt •

    $default  reduce using rule 7 (Decl)


State 20

   13 FuncDecl: CHAR ID • LPAREN $@3 ParamDeclList RPAREN Block
   40 VarDecl: CHAR ID • SEMICOLON
   84 ArrDecl: CHAR ID • LBRACE RBRACE SEMICOLON
   86        | CHAR ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACE     shift, and go to state 43


State 21

   11 FuncDecl: INT ID • LPAREN $@2 ParamDeclList RPAREN Block
   38 VarDecl: INT ID • SEMICOLON
   83 ArrDecl: INT ID • LBRACE RBRACE SEMICOLON
   85        | INT ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 44
    LPAREN     shift, and go to state 45
    LBRACE     shift, and go to state 46


State 22

   15 FuncDecl: FLOAT ID • LPAREN $@4 ParamDeclList RPAREN Block
   42 VarDecl: FLOAT ID • SEMICOLON

    SEMICOLON  shift, and go to state 47
    LPAREN     shift, and go to state 48


State 23

    9 FuncDecl: VOID ID • LPAREN $@1 ParamDeclList RPAREN Block

    LPAREN  shift, and go to state 49


State 24

   90 IfStmt: IF $@5 • LPAREN Condition RPAREN $@6 Block $@7 ElseStmt

    LPAREN  shift, and go to state 50


State 25

   53 Expr: WRITE NEWLINECHAR • SEMICOLON

    SEMICOLON  shift, and go to state 51


State 26

   51 Expr: WRITE STRINGID • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 27

   50 Expr: WRITE ID • SEMICOLON
   52     | WRITE ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 53
    LBRACE     shift, and go to state 54


State 28

   60 Expr: RETURN NUMBER • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 29

   61 Expr: RETURN FLOATNUM • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 30

   62 Expr: RETURN CHARID • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 31

   59 Expr: RETURN ID • SEMICOLON

    SEMICOLON  shift, and go to state 58


State 32

   39 VarDecl: ID EQ • NUMBER SEMICOLON
   41        | ID EQ • CHARID SEMICOLON
   43        | ID EQ • FLOATNUM SEMICOLON
   44        | ID EQ • ID SEMICOLON
   48 Expr: ID EQ • ID SEMICOLON
   49     | ID EQ • ID LPAREN ArgDeclList RPAREN SEMICOLON
   63 IDEQExpr: ID EQ • MathStmt

    ADD       shift, and go to state 59
    MULTIPLY  shift, and go to state 60
    SUB       shift, and go to state 61
    DIV       shift, and go to state 62
    EXPONENT  shift, and go to state 63
    LPAREN    shift, and go to state 64
    RPAREN    shift, and go to state 65
    NUMBER    shift, and go to state 66
    FLOATNUM  shift, and go to state 67
    CHARID    shift, and go to state 68
    ID        shift, and go to state 69

    MathStmt  go to state 70
    Math      go to state 71
    Operator  go to state 72


State 33

   58 Expr: ID LPAREN • ArgDeclList RPAREN SEMICOLON

    NUMBER    shift, and go to state 73
    FLOATNUM  shift, and go to state 74
    CHARID    shift, and go to state 75
    ID        shift, and go to state 76

    $default  reduce using rule 24 (ArgDecl)

    ArgDeclList  go to state 77
    ArgDecl      go to state 78


State 34

   55 Expr: ID LBRACE • NUMBER RBRACE EQ NUMBER SEMICOLON
   56     | ID LBRACE • NUMBER RBRACE EQ Math SEMICOLON
   57     | ID LBRACE • NUMBER RBRACE EQ CHARID SEMICOLON

    NUMBER  shift, and go to state 79


State 35

    0 $accept: Program $end •

    $default  accept


State 36

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 37

   48 Expr: ID • EQ ID SEMICOLON
   49     | ID • EQ ID LPAREN ArgDeclList RPAREN SEMICOLON
   55     | ID • LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON
   56     | ID • LBRACE NUMBER RBRACE EQ Math SEMICOLON
   57     | ID • LBRACE NUMBER RBRACE EQ CHARID SEMICOLON
   58     | ID • LPAREN ArgDeclList RPAREN SEMICOLON
   63 IDEQExpr: ID • EQ MathStmt

    EQ      shift, and go to state 80
    LPAREN  shift, and go to state 33
    LBRACE  shift, and go to state 34


State 38

   36 StmtList: Expr StmtList •

    $default  reduce using rule 36 (StmtList)


State 39

   54 Expr: IDEQExpr • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 40

   45 VarDecl: IDEQExpr SEMICOLON •
   54 Expr: IDEQExpr SEMICOLON •

    $end       reduce using rule 45 (VarDecl)
    $end       [reduce using rule 54 (Expr)]
    CHAR       reduce using rule 45 (VarDecl)
    CHAR       [reduce using rule 54 (Expr)]
    INT        reduce using rule 45 (VarDecl)
    INT        [reduce using rule 54 (Expr)]
    FLOAT      reduce using rule 45 (VarDecl)
    FLOAT      [reduce using rule 54 (Expr)]
    VOID       reduce using rule 45 (VarDecl)
    VOID       [reduce using rule 54 (Expr)]
    IF         reduce using rule 45 (VarDecl)
    IF         [reduce using rule 54 (Expr)]
    WRITE      reduce using rule 45 (VarDecl)
    WRITE      [reduce using rule 54 (Expr)]
    RETURN     reduce using rule 45 (VarDecl)
    RETURN     [reduce using rule 54 (Expr)]
    SEMICOLON  reduce using rule 45 (VarDecl)
    SEMICOLON  [reduce using rule 54 (Expr)]
    RBRACKET   reduce using rule 45 (VarDecl)
    RBRACKET   [reduce using rule 54 (Expr)]
    ID         reduce using rule 45 (VarDecl)
    ID         [reduce using rule 54 (Expr)]
    $default   reduce using rule 45 (VarDecl)


State 41

   40 VarDecl: CHAR ID SEMICOLON •

    $default  reduce using rule 40 (VarDecl)


State 42

   13 FuncDecl: CHAR ID LPAREN • $@3 ParamDeclList RPAREN Block

    $default  reduce using rule 12 ($@3)

    $@3  go to state 82


State 43

   84 ArrDecl: CHAR ID LBRACE • RBRACE SEMICOLON
   86        | CHAR ID LBRACE • NUMBER RBRACE SEMICOLON

    RBRACE  shift, and go to state 83
    NUMBER  shift, and go to state 84


State 44

   38 VarDecl: INT ID SEMICOLON •

    $default  reduce using rule 38 (VarDecl)


State 45

   11 FuncDecl: INT ID LPAREN • $@2 ParamDeclList RPAREN Block

    $default  reduce using rule 10 ($@2)

    $@2  go to state 85


State 46

   83 ArrDecl: INT ID LBRACE • RBRACE SEMICOLON
   85        | INT ID LBRACE • NUMBER RBRACE SEMICOLON

    RBRACE  shift, and go to state 86
    NUMBER  shift, and go to state 87


State 47

   42 VarDecl: FLOAT ID SEMICOLON •

    $default  reduce using rule 42 (VarDecl)


State 48

   15 FuncDecl: FLOAT ID LPAREN • $@4 ParamDeclList RPAREN Block

    $default  reduce using rule 14 ($@4)

    $@4  go to state 88


State 49

    9 FuncDecl: VOID ID LPAREN • $@1 ParamDeclList RPAREN Block

    $default  reduce using rule 8 ($@1)

    $@1  go to state 89


State 50

   90 IfStmt: IF $@5 LPAREN • Condition RPAREN $@6 Block $@7 ElseStmt

    NUMBER    shift, and go to state 90
    FLOATNUM  shift, and go to state 91
    CHARID    shift, and go to state 92
    ID        shift, and go to state 93

    Condition  go to state 94


State 51

   53 Expr: WRITE NEWLINECHAR SEMICOLON •

    $default  reduce using rule 53 (Expr)


State 52

   51 Expr: WRITE STRINGID SEMICOLON •

    $default  reduce using rule 51 (Expr)


State 53

   50 Expr: WRITE ID SEMICOLON •

    $default  reduce using rule 50 (Expr)


State 54

   52 Expr: WRITE ID LBRACE • NUMBER RBRACE SEMICOLON

    NUMBER  shift, and go to state 95


State 55

   60 Expr: RETURN NUMBER SEMICOLON •

    $default  reduce using rule 60 (Expr)


State 56

   61 Expr: RETURN FLOATNUM SEMICOLON •

    $default  reduce using rule 61 (Expr)


State 57

   62 Expr: RETURN CHARID SEMICOLON •

    $default  reduce using rule 62 (Expr)


State 58

   59 Expr: RETURN ID SEMICOLON •

    $default  reduce using rule 59 (Expr)


State 59

   73 Operator: ADD •

    $default  reduce using rule 73 (Operator)


State 60

   75 Operator: MULTIPLY •

    $default  reduce using rule 75 (Operator)


State 61

   74 Operator: SUB •

    $default  reduce using rule 74 (Operator)


State 62

   76 Operator: DIV •

    $default  reduce using rule 76 (Operator)


State 63

   71 Math: EXPONENT •

    $default  reduce using rule 71 (Math)


State 64

   66 Math: LPAREN •

    $default  reduce using rule 66 (Math)


State 65

   67 Math: RPAREN •

    $default  reduce using rule 67 (Math)


State 66

   39 VarDecl: ID EQ NUMBER • SEMICOLON
   69 Math: NUMBER •

    SEMICOLON  shift, and go to state 96

    SEMICOLON  [reduce using rule 69 (Math)]
    $default   reduce using rule 69 (Math)


State 67

   43 VarDecl: ID EQ FLOATNUM • SEMICOLON
   70 Math: FLOATNUM •

    SEMICOLON  shift, and go to state 97

    SEMICOLON  [reduce using rule 70 (Math)]
    $default   reduce using rule 70 (Math)


State 68

   41 VarDecl: ID EQ CHARID • SEMICOLON

    SEMICOLON  shift, and go to state 98


State 69

   44 VarDecl: ID EQ ID • SEMICOLON
   48 Expr: ID EQ ID • SEMICOLON
   49     | ID EQ ID • LPAREN ArgDeclList RPAREN SEMICOLON
   68 Math: ID •

    SEMICOLON  shift, and go to state 99
    LPAREN     shift, and go to state 100

    SEMICOLON  [reduce using rule 68 (Math)]
    LPAREN     [reduce using rule 68 (Math)]
    $default   reduce using rule 68 (Math)


State 70

   63 IDEQExpr: ID EQ MathStmt •

    $default  reduce using rule 63 (IDEQExpr)


State 71

   64 MathStmt: Math • MathStmt
   65         | Math •

    ADD       shift, and go to state 59
    MULTIPLY  shift, and go to state 60
    SUB       shift, and go to state 61
    DIV       shift, and go to state 62
    EXPONENT  shift, and go to state 63
    LPAREN    shift, and go to state 64
    RPAREN    shift, and go to state 65
    NUMBER    shift, and go to state 101
    FLOATNUM  shift, and go to state 102
    ID        shift, and go to state 103

    $default  reduce using rule 65 (MathStmt)

    MathStmt  go to state 104
    Math      go to state 71
    Operator  go to state 72


State 72

   72 Math: Operator •

    $default  reduce using rule 72 (Math)


State 73

   25 ArgDecl: NUMBER •

    $default  reduce using rule 25 (ArgDecl)


State 74

   26 ArgDecl: FLOATNUM •

    $default  reduce using rule 26 (ArgDecl)


State 75

   27 ArgDecl: CHARID •

    $default  reduce using rule 27 (ArgDecl)


State 76

   28 ArgDecl: ID •

    $default  reduce using rule 28 (ArgDecl)


State 77

   58 Expr: ID LPAREN ArgDeclList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 105


State 78

   22 ArgDeclList: ArgDecl • COMMA ArgDeclList
   23            | ArgDecl •

    COMMA  shift, and go to state 106

    $default  reduce using rule 23 (ArgDeclList)


State 79

   55 Expr: ID LBRACE NUMBER • RBRACE EQ NUMBER SEMICOLON
   56     | ID LBRACE NUMBER • RBRACE EQ Math SEMICOLON
   57     | ID LBRACE NUMBER • RBRACE EQ CHARID SEMICOLON

    RBRACE  shift, and go to state 107


State 80

   48 Expr: ID EQ • ID SEMICOLON
   49     | ID EQ • ID LPAREN ArgDeclList RPAREN SEMICOLON
   63 IDEQExpr: ID EQ • MathStmt

    ADD       shift, and go to state 59
    MULTIPLY  shift, and go to state 60
    SUB       shift, and go to state 61
    DIV       shift, and go to state 62
    EXPONENT  shift, and go to state 63
    LPAREN    shift, and go to state 64
    RPAREN    shift, and go to state 65
    NUMBER    shift, and go to state 101
    FLOATNUM  shift, and go to state 102
    ID        shift, and go to state 108

    MathStmt  go to state 70
    Math      go to state 71
    Operator  go to state 72


State 81

   54 Expr: IDEQExpr SEMICOLON •

    $default  reduce using rule 54 (Expr)


State 82

   13 FuncDecl: CHAR ID LPAREN $@3 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 109
    INT    shift, and go to state 110
    FLOAT  shift, and go to state 111

    $default  reduce using rule 18 (ParamDecl)

    ParamDeclList  go to state 112
    ParamDecl      go to state 113


State 83

   84 ArrDecl: CHAR ID LBRACE RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 114


State 84

   86 ArrDecl: CHAR ID LBRACE NUMBER • RBRACE SEMICOLON

    RBRACE  shift, and go to state 115


State 85

   11 FuncDecl: INT ID LPAREN $@2 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 109
    INT    shift, and go to state 110
    FLOAT  shift, and go to state 111

    $default  reduce using rule 18 (ParamDecl)

    ParamDeclList  go to state 116
    ParamDecl      go to state 113


State 86

   83 ArrDecl: INT ID LBRACE RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 117


State 87

   85 ArrDecl: INT ID LBRACE NUMBER • RBRACE SEMICOLON

    RBRACE  shift, and go to state 118


State 88

   15 FuncDecl: FLOAT ID LPAREN $@4 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 109
    INT    shift, and go to state 110
    FLOAT  shift, and go to state 111

    $default  reduce using rule 18 (ParamDecl)

    ParamDeclList  go to state 119
    ParamDecl      go to state 113


State 89

    9 FuncDecl: VOID ID LPAREN $@1 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 109
    INT    shift, and go to state 110
    FLOAT  shift, and go to state 111

    $default  reduce using rule 18 (ParamDecl)

    ParamDeclList  go to state 120
    ParamDecl      go to state 113


State 90

   93 Condition: NUMBER • CompOperator NUMBER

    DEQ    shift, and go to state 121
    NOTEQ  shift, and go to state 122
    LEQ    shift, and go to state 123
    GEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126

    CompOperator  go to state 127


State 91

   96 Condition: FLOATNUM • CompOperator FLOATNUM

    DEQ    shift, and go to state 121
    NOTEQ  shift, and go to state 122
    LEQ    shift, and go to state 123
    GEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126

    CompOperator  go to state 128


State 92

   97 Condition: CHARID • CompOperator CHARID

    DEQ    shift, and go to state 121
    NOTEQ  shift, and go to state 122
    LEQ    shift, and go to state 123
    GEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126

    CompOperator  go to state 129


State 93

   94 Condition: ID • CompOperator ID
   95          | ID • CompOperator NUMBER

    DEQ    shift, and go to state 121
    NOTEQ  shift, and go to state 122
    LEQ    shift, and go to state 123
    GEQ    shift, and go to state 124
    LT     shift, and go to state 125
    GT     shift, and go to state 126

    CompOperator  go to state 130


State 94

   90 IfStmt: IF $@5 LPAREN Condition • RPAREN $@6 Block $@7 ElseStmt

    RPAREN  shift, and go to state 131


State 95

   52 Expr: WRITE ID LBRACE NUMBER • RBRACE SEMICOLON

    RBRACE  shift, and go to state 132


State 96

   39 VarDecl: ID EQ NUMBER SEMICOLON •

    $default  reduce using rule 39 (VarDecl)


State 97

   43 VarDecl: ID EQ FLOATNUM SEMICOLON •

    $default  reduce using rule 43 (VarDecl)


State 98

   41 VarDecl: ID EQ CHARID SEMICOLON •

    $default  reduce using rule 41 (VarDecl)


State 99

   44 VarDecl: ID EQ ID SEMICOLON •
   48 Expr: ID EQ ID SEMICOLON •

    $end       reduce using rule 44 (VarDecl)
    $end       [reduce using rule 48 (Expr)]
    CHAR       reduce using rule 44 (VarDecl)
    CHAR       [reduce using rule 48 (Expr)]
    INT        reduce using rule 44 (VarDecl)
    INT        [reduce using rule 48 (Expr)]
    FLOAT      reduce using rule 44 (VarDecl)
    FLOAT      [reduce using rule 48 (Expr)]
    VOID       reduce using rule 44 (VarDecl)
    VOID       [reduce using rule 48 (Expr)]
    IF         reduce using rule 44 (VarDecl)
    IF         [reduce using rule 48 (Expr)]
    WRITE      reduce using rule 44 (VarDecl)
    WRITE      [reduce using rule 48 (Expr)]
    RETURN     reduce using rule 44 (VarDecl)
    RETURN     [reduce using rule 48 (Expr)]
    SEMICOLON  reduce using rule 44 (VarDecl)
    SEMICOLON  [reduce using rule 48 (Expr)]
    RBRACKET   reduce using rule 44 (VarDecl)
    RBRACKET   [reduce using rule 48 (Expr)]
    ID         reduce using rule 44 (VarDecl)
    ID         [reduce using rule 48 (Expr)]
    $default   reduce using rule 44 (VarDecl)


State 100

   49 Expr: ID EQ ID LPAREN • ArgDeclList RPAREN SEMICOLON

    NUMBER    shift, and go to state 73
    FLOATNUM  shift, and go to state 74
    CHARID    shift, and go to state 75
    ID        shift, and go to state 76

    $default  reduce using rule 24 (ArgDecl)

    ArgDeclList  go to state 133
    ArgDecl      go to state 78


State 101

   69 Math: NUMBER •

    $default  reduce using rule 69 (Math)


State 102

   70 Math: FLOATNUM •

    $default  reduce using rule 70 (Math)


State 103

   68 Math: ID •

    $default  reduce using rule 68 (Math)


State 104

   64 MathStmt: Math MathStmt •

    $default  reduce using rule 64 (MathStmt)


State 105

   58 Expr: ID LPAREN ArgDeclList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 134


State 106

   22 ArgDeclList: ArgDecl COMMA • ArgDeclList

    NUMBER    shift, and go to state 73
    FLOATNUM  shift, and go to state 74
    CHARID    shift, and go to state 75
    ID        shift, and go to state 76

    $default  reduce using rule 24 (ArgDecl)

    ArgDeclList  go to state 135
    ArgDecl      go to state 78


State 107

   55 Expr: ID LBRACE NUMBER RBRACE • EQ NUMBER SEMICOLON
   56     | ID LBRACE NUMBER RBRACE • EQ Math SEMICOLON
   57     | ID LBRACE NUMBER RBRACE • EQ CHARID SEMICOLON

    EQ  shift, and go to state 136


State 108

   48 Expr: ID EQ ID • SEMICOLON
   49     | ID EQ ID • LPAREN ArgDeclList RPAREN SEMICOLON
   68 Math: ID •

    SEMICOLON  shift, and go to state 137
    LPAREN     shift, and go to state 100

    SEMICOLON  [reduce using rule 68 (Math)]
    LPAREN     [reduce using rule 68 (Math)]
    $default   reduce using rule 68 (Math)


State 109

   21 ParamDecl: CHAR • ID

    ID  shift, and go to state 138


State 110

   19 ParamDecl: INT • ID

    ID  shift, and go to state 139


State 111

   20 ParamDecl: FLOAT • ID

    ID  shift, and go to state 140


State 112

   13 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 141


State 113

   16 ParamDeclList: ParamDecl • COMMA ParamDeclList
   17              | ParamDecl •

    COMMA  shift, and go to state 142

    $default  reduce using rule 17 (ParamDeclList)


State 114

   84 ArrDecl: CHAR ID LBRACE RBRACE SEMICOLON •

    $default  reduce using rule 84 (ArrDecl)


State 115

   86 ArrDecl: CHAR ID LBRACE NUMBER RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 143


State 116

   11 FuncDecl: INT ID LPAREN $@2 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 144


State 117

   83 ArrDecl: INT ID LBRACE RBRACE SEMICOLON •

    $default  reduce using rule 83 (ArrDecl)


State 118

   85 ArrDecl: INT ID LBRACE NUMBER RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 145


State 119

   15 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 146


State 120

    9 FuncDecl: VOID ID LPAREN $@1 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 147


State 121

   77 CompOperator: DEQ •

    $default  reduce using rule 77 (CompOperator)


State 122

   82 CompOperator: NOTEQ •

    $default  reduce using rule 82 (CompOperator)


State 123

   80 CompOperator: LEQ •

    $default  reduce using rule 80 (CompOperator)


State 124

   81 CompOperator: GEQ •

    $default  reduce using rule 81 (CompOperator)


State 125

   78 CompOperator: LT •

    $default  reduce using rule 78 (CompOperator)


State 126

   79 CompOperator: GT •

    $default  reduce using rule 79 (CompOperator)


State 127

   93 Condition: NUMBER CompOperator • NUMBER

    NUMBER  shift, and go to state 148


State 128

   96 Condition: FLOATNUM CompOperator • FLOATNUM

    FLOATNUM  shift, and go to state 149


State 129

   97 Condition: CHARID CompOperator • CHARID

    CHARID  shift, and go to state 150


State 130

   94 Condition: ID CompOperator • ID
   95          | ID CompOperator • NUMBER

    NUMBER  shift, and go to state 151
    ID      shift, and go to state 152


State 131

   90 IfStmt: IF $@5 LPAREN Condition RPAREN • $@6 Block $@7 ElseStmt

    $default  reduce using rule 88 ($@6)

    $@6  go to state 153


State 132

   52 Expr: WRITE ID LBRACE NUMBER RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 154


State 133

   49 Expr: ID EQ ID LPAREN ArgDeclList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 155


State 134

   58 Expr: ID LPAREN ArgDeclList RPAREN SEMICOLON •

    $default  reduce using rule 58 (Expr)


State 135

   22 ArgDeclList: ArgDecl COMMA ArgDeclList •

    $default  reduce using rule 22 (ArgDeclList)


State 136

   55 Expr: ID LBRACE NUMBER RBRACE EQ • NUMBER SEMICOLON
   56     | ID LBRACE NUMBER RBRACE EQ • Math SEMICOLON
   57     | ID LBRACE NUMBER RBRACE EQ • CHARID SEMICOLON

    ADD       shift, and go to state 59
    MULTIPLY  shift, and go to state 60
    SUB       shift, and go to state 61
    DIV       shift, and go to state 62
    EXPONENT  shift, and go to state 63
    LPAREN    shift, and go to state 64
    RPAREN    shift, and go to state 65
    NUMBER    shift, and go to state 156
    FLOATNUM  shift, and go to state 102
    CHARID    shift, and go to state 157
    ID        shift, and go to state 103

    Math      go to state 158
    Operator  go to state 72


State 137

   48 Expr: ID EQ ID SEMICOLON •

    $default  reduce using rule 48 (Expr)


State 138

   21 ParamDecl: CHAR ID •

    $default  reduce using rule 21 (ParamDecl)


State 139

   19 ParamDecl: INT ID •

    $default  reduce using rule 19 (ParamDecl)


State 140

   20 ParamDecl: FLOAT ID •

    $default  reduce using rule 20 (ParamDecl)


State 141

   13 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 159

    Block  go to state 160


State 142

   16 ParamDeclList: ParamDecl COMMA • ParamDeclList

    CHAR   shift, and go to state 109
    INT    shift, and go to state 110
    FLOAT  shift, and go to state 111

    $default  reduce using rule 18 (ParamDecl)

    ParamDeclList  go to state 161
    ParamDecl      go to state 113


State 143

   86 ArrDecl: CHAR ID LBRACE NUMBER RBRACE SEMICOLON •

    $default  reduce using rule 86 (ArrDecl)


State 144

   11 FuncDecl: INT ID LPAREN $@2 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 159

    Block  go to state 162


State 145

   85 ArrDecl: INT ID LBRACE NUMBER RBRACE SEMICOLON •

    $default  reduce using rule 85 (ArrDecl)


State 146

   15 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 159

    Block  go to state 163


State 147

    9 FuncDecl: VOID ID LPAREN $@1 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 159

    Block  go to state 164


State 148

   93 Condition: NUMBER CompOperator NUMBER •

    $default  reduce using rule 93 (Condition)


State 149

   96 Condition: FLOATNUM CompOperator FLOATNUM •

    $default  reduce using rule 96 (Condition)


State 150

   97 Condition: CHARID CompOperator CHARID •

    $default  reduce using rule 97 (Condition)


State 151

   95 Condition: ID CompOperator NUMBER •

    $default  reduce using rule 95 (Condition)


State 152

   94 Condition: ID CompOperator ID •

    $default  reduce using rule 94 (Condition)


State 153

   90 IfStmt: IF $@5 LPAREN Condition RPAREN $@6 • Block $@7 ElseStmt

    LBRACKET  shift, and go to state 159

    Block  go to state 165


State 154

   52 Expr: WRITE ID LBRACE NUMBER RBRACE SEMICOLON •

    $default  reduce using rule 52 (Expr)


State 155

   49 Expr: ID EQ ID LPAREN ArgDeclList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 166


State 156

   55 Expr: ID LBRACE NUMBER RBRACE EQ NUMBER • SEMICOLON
   69 Math: NUMBER •

    SEMICOLON  shift, and go to state 167

    SEMICOLON  [reduce using rule 69 (Math)]


State 157

   57 Expr: ID LBRACE NUMBER RBRACE EQ CHARID • SEMICOLON

    SEMICOLON  shift, and go to state 168


State 158

   56 Expr: ID LBRACE NUMBER RBRACE EQ Math • SEMICOLON

    SEMICOLON  shift, and go to state 169


State 159

   29 Block: LBRACKET • BlockDeclList RBRACKET

    CHAR       shift, and go to state 170
    INT        shift, and go to state 171
    FLOAT      shift, and go to state 172
    IF         shift, and go to state 5
    WRITE      shift, and go to state 6
    RETURN     shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    ID         shift, and go to state 9

    CHAR       [reduce using rule 35 (StmtList)]
    INT        [reduce using rule 35 (StmtList)]
    FLOAT      [reduce using rule 35 (StmtList)]
    IF         [reduce using rule 35 (StmtList)]
    WRITE      [reduce using rule 35 (StmtList)]
    RETURN     [reduce using rule 35 (StmtList)]
    SEMICOLON  [reduce using rule 35 (StmtList)]
    ID         [reduce using rule 35 (StmtList)]
    $default   reduce using rule 35 (StmtList)

    BlockDeclList  go to state 173
    BlockDecl      go to state 174
    StmtList       go to state 175
    VarDecl        go to state 176
    Expr           go to state 16
    IDEQExpr       go to state 17
    ArrDecl        go to state 18
    IfStmt         go to state 177


State 160

   13 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList RPAREN Block •

    $default  reduce using rule 13 (FuncDecl)


State 161

   16 ParamDeclList: ParamDecl COMMA ParamDeclList •

    $default  reduce using rule 16 (ParamDeclList)


State 162

   11 FuncDecl: INT ID LPAREN $@2 ParamDeclList RPAREN Block •

    $default  reduce using rule 11 (FuncDecl)


State 163

   15 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList RPAREN Block •

    $default  reduce using rule 15 (FuncDecl)


State 164

    9 FuncDecl: VOID ID LPAREN $@1 ParamDeclList RPAREN Block •

    $default  reduce using rule 9 (FuncDecl)


State 165

   90 IfStmt: IF $@5 LPAREN Condition RPAREN $@6 Block • $@7 ElseStmt

    $default  reduce using rule 89 ($@7)

    $@7  go to state 178


State 166

   49 Expr: ID EQ ID LPAREN ArgDeclList RPAREN SEMICOLON •

    $default  reduce using rule 49 (Expr)


State 167

   55 Expr: ID LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON •

    $default  reduce using rule 55 (Expr)


State 168

   57 Expr: ID LBRACE NUMBER RBRACE EQ CHARID SEMICOLON •

    $default  reduce using rule 57 (Expr)


State 169

   56 Expr: ID LBRACE NUMBER RBRACE EQ Math SEMICOLON •

    $default  reduce using rule 56 (Expr)


State 170

   40 VarDecl: CHAR • ID SEMICOLON
   84 ArrDecl: CHAR • ID LBRACE RBRACE SEMICOLON
   86        | CHAR • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 179


State 171

   38 VarDecl: INT • ID SEMICOLON
   83 ArrDecl: INT • ID LBRACE RBRACE SEMICOLON
   85        | INT • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 180


State 172

   42 VarDecl: FLOAT • ID SEMICOLON

    ID  shift, and go to state 181


State 173

   29 Block: LBRACKET BlockDeclList • RBRACKET

    RBRACKET  shift, and go to state 182


State 174

   30 BlockDeclList: BlockDecl • BlockDeclList
   31              | BlockDecl •

    CHAR       shift, and go to state 170
    INT        shift, and go to state 171
    FLOAT      shift, and go to state 172
    IF         shift, and go to state 5
    WRITE      shift, and go to state 6
    RETURN     shift, and go to state 7
    SEMICOLON  shift, and go to state 8
    ID         shift, and go to state 9

    CHAR       [reduce using rule 35 (StmtList)]
    INT        [reduce using rule 35 (StmtList)]
    FLOAT      [reduce using rule 35 (StmtList)]
    IF         [reduce using rule 35 (StmtList)]
    WRITE      [reduce using rule 35 (StmtList)]
    RETURN     [reduce using rule 35 (StmtList)]
    SEMICOLON  [reduce using rule 35 (StmtList)]
    RBRACKET   reduce using rule 31 (BlockDeclList)
    RBRACKET   [reduce using rule 35 (StmtList)]
    ID         [reduce using rule 35 (StmtList)]
    $default   reduce using rule 31 (BlockDeclList)

    BlockDeclList  go to state 183
    BlockDecl      go to state 174
    StmtList       go to state 175
    VarDecl        go to state 176
    Expr           go to state 16
    IDEQExpr       go to state 17
    ArrDecl        go to state 18
    IfStmt         go to state 177


State 175

   33 BlockDecl: StmtList •

    $default  reduce using rule 33 (BlockDecl)


State 176

   32 BlockDecl: VarDecl •

    $default  reduce using rule 32 (BlockDecl)


State 177

   34 BlockDecl: IfStmt •

    $default  reduce using rule 34 (BlockDecl)


State 178

   90 IfStmt: IF $@5 LPAREN Condition RPAREN $@6 Block $@7 • ElseStmt

    ELSE  shift, and go to state 184

    $default  reduce using rule 91 (ElseStmt)

    ElseStmt  go to state 185


State 179

   40 VarDecl: CHAR ID • SEMICOLON
   84 ArrDecl: CHAR ID • LBRACE RBRACE SEMICOLON
   86        | CHAR ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 41
    LBRACE     shift, and go to state 43


State 180

   38 VarDecl: INT ID • SEMICOLON
   83 ArrDecl: INT ID • LBRACE RBRACE SEMICOLON
   85        | INT ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 44
    LBRACE     shift, and go to state 46


State 181

   42 VarDecl: FLOAT ID • SEMICOLON

    SEMICOLON  shift, and go to state 47


State 182

   29 Block: LBRACKET BlockDeclList RBRACKET •

    $default  reduce using rule 29 (Block)


State 183

   30 BlockDeclList: BlockDecl BlockDeclList •

    $default  reduce using rule 30 (BlockDeclList)


State 184

   92 ElseStmt: ELSE • Block

    LBRACKET  shift, and go to state 159

    Block  go to state 186


State 185

   90 IfStmt: IF $@5 LPAREN Condition RPAREN $@6 Block $@7 ElseStmt •

    $default  reduce using rule 90 (IfStmt)


State 186

   92 ElseStmt: ELSE Block •

    $default  reduce using rule 92 (ElseStmt)
