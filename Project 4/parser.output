Nonterminals useless in grammar

    FunDeclList
    VarDeclList
    ArrayDeclList


Terminals unused in grammar

    WHILE
    RETURN
    KEYWORD
    SINGLE_QOUTE
    COMMA


Rules useless in grammar

   65 FunDeclList: ε
   66            | FunDecl FunDeclList
   67            | FunDecl

   68 VarDeclList: VarDecl VarDeclList
   69            | VarDecl

   70 ArrayDeclList: ArrayDecl ArrayDeclList
   71              | ArrayDecl


Rules useless in parser due to conflicts

   31 ParamDeclList: ParamDecl

   33 ParamDecl: ε


State 11 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 17 conflicts: 4 shift/reduce
State 19 conflicts: 1 shift/reduce
State 21 conflicts: 1 shift/reduce
State 23 conflicts: 2 shift/reduce
State 25 conflicts: 1 shift/reduce, 1 reduce/reduce
State 47 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce, 2 reduce/reduce
State 59 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | StmtList
    6     | VarDecl
    7     | ArrayDecl

    8 FunDecl: TYPE ID LPAREN ParamDeclList RPAREN Block

    9 FuncallStmtList: FuncallStmt FuncallStmtList
   10                | FuncallStmt

   11 FuncallStmt: ID LPAREN ParamDeclList RPAREN SEMICOLON

   12 CondStmtList: CondStmt CondStmtList
   13             | CondStmt

   14 CondStmt: IF LPAREN Condition RPAREN Block ElseCompt

   15 ElseCompt: ε
   16          | ELSE Block

   17 Condition: MathStatList CompSymbol MathStatList BoolCompt
   18          | MathStatList BoolCompt

   19 CompSymbol: LSS
   20           | GTR
   21           | LEQ
   22           | GEQ
   23           | DEQ
   24           | NEQ

   25 BoolCompt: ε
   26          | BoolOp Condition

   27 BoolOp: AND
   28       | OR

   29 ParamDeclList: ε
   30              | ParamDecl ParamDeclList
   31              | ParamDecl

   32 ParamDecl: TYPE ID
   33          | ε

   34 Block: LBRACE FunBlock RBRACE

   35 FunBlock: DeclList

   36 VarDecl: TYPE ID SEMICOLON

   37 ArrayDecl: TYPE ID LBRACKET NUMBER RBRACKET SEMICOLON

   38 StmtList: Stmt StmtList
   39         | Stmt

   40 Stmt: AssignStmtList
   41     | MathStatList
   42     | WriteStmtList
   43     | FuncallStmtList
   44     | CondStmtList

   45 AssignStmtList: AssignStmt AssignStmtList
   46               | AssignStmt

   47 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON
   48           | ID LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON
   49           | ID EQ CHAR SEMICOLON
   50           | ID EQ NUMBER SEMICOLON
   51           | ID EQ MathStat SEMICOLON

   52 WriteStmtList: WriteStmt WriteStmtList
   53              | WriteStmt

   54 WriteStmt: WRITE ID SEMICOLON

   55 BinOp: ADD
   56      | SUB
   57      | MULTIPLY
   58      | DIV

   59 MathStatList: MathStat MathStatList
   60             | MathStat

   61 MathStat: NUMBER BinOp MathStat
   62         | ID BinOp MathStat
   63         | NUMBER
   64         | ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 8 11 32 36 37 47 48 49 50 51 54 62 64
    WRITE <string> (259) 54
    IF <string> (260) 14
    ELSE <string> (261) 16
    WHILE <string> (262)
    RETURN <string> (263)
    TYPE <string> (264) 8 32 36 37
    KEYWORD <string> (265)
    NUMBER <string> (266) 37 47 48 50 61 63
    CHAR <string> (267) 48 49
    SINGLE_QOUTE <char> (268)
    SEMICOLON <char> (269) 11 36 37 47 48 49 50 51 54
    COMMA <char> (270)
    EQ <char> (271) 47 48 49 50 51
    OR <char> (272) 28
    AND <char> (273) 27
    LSS <char> (274) 19
    GTR <char> (275) 20
    LEQ <char> (276) 21
    GEQ <char> (277) 22
    LPAREN <char> (278) 8 11 14
    RPAREN <char> (279) 8 11 14
    LBRACE <char> (280) 34
    RBRACE <char> (281) 34
    LBRACKET <char> (282) 37 47 48
    RBRACKET <char> (283) 37 47 48
    ADD <char> (284) 55
    SUB <char> (285) 56
    MULTIPLY <char> (286) 57
    DIV <char> (287) 58
    DEQ <char> (288) 23
    NEQ <char> (289) 24


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    Program <ast> (36)
        on left: 1
        on right: 0
    DeclList <ast> (37)
        on left: 2 3
        on right: 1 2 35
    Decl <ast> (38)
        on left: 4 5 6 7
        on right: 2 3
    FunDecl <ast> (39)
        on left: 8
        on right: 4
    FuncallStmtList <ast> (40)
        on left: 9 10
        on right: 9 43
    FuncallStmt <ast> (41)
        on left: 11
        on right: 9 10
    CondStmtList <ast> (42)
        on left: 12 13
        on right: 12 44
    CondStmt <ast> (43)
        on left: 14
        on right: 12 13
    ElseCompt (44)
        on left: 15 16
        on right: 14
    Condition (45)
        on left: 17 18
        on right: 14 26
    CompSymbol <ast> (46)
        on left: 19 20 21 22 23 24
        on right: 17
    BoolCompt (47)
        on left: 25 26
        on right: 17 18
    BoolOp (48)
        on left: 27 28
        on right: 26
    ParamDeclList <ast> (49)
        on left: 29 30 31
        on right: 8 11 30
    ParamDecl <ast> (50)
        on left: 32 33
        on right: 30 31
    Block <ast> (51)
        on left: 34
        on right: 8 14 16
    FunBlock (52)
        on left: 35
        on right: 34
    VarDecl <ast> (53)
        on left: 36
        on right: 6
    ArrayDecl <ast> (54)
        on left: 37
        on right: 7
    StmtList <ast> (55)
        on left: 38 39
        on right: 5 38
    Stmt <ast> (56)
        on left: 40 41 42 43 44
        on right: 38 39
    AssignStmtList <ast> (57)
        on left: 45 46
        on right: 40 45
    AssignStmt <ast> (58)
        on left: 47 48 49 50 51
        on right: 45 46
    WriteStmtList <ast> (59)
        on left: 52 53
        on right: 42 52
    WriteStmt <ast> (60)
        on left: 54
        on right: 52 53
    BinOp (61)
        on left: 55 56 57 58
        on right: 61 62
    MathStatList <ast> (62)
        on left: 59 60
        on right: 17 18 41 59
    MathStat <ast> (63)
        on left: 61 62 63 64
        on right: 51 59 60 61 62


State 0

    0 $accept: • Program $end

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    IF      shift, and go to state 3
    TYPE    shift, and go to state 4
    NUMBER  shift, and go to state 5

    Program          go to state 6
    DeclList         go to state 7
    Decl             go to state 8
    FunDecl          go to state 9
    FuncallStmtList  go to state 10
    FuncallStmt      go to state 11
    CondStmtList     go to state 12
    CondStmt         go to state 13
    VarDecl          go to state 14
    ArrayDecl        go to state 15
    StmtList         go to state 16
    Stmt             go to state 17
    AssignStmtList   go to state 18
    AssignStmt       go to state 19
    WriteStmtList    go to state 20
    WriteStmt        go to state 21
    MathStatList     go to state 22
    MathStat         go to state 23


State 1

   11 FuncallStmt: ID • LPAREN ParamDeclList RPAREN SEMICOLON
   47 AssignStmt: ID • LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON
   48           | ID • LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON
   49           | ID • EQ CHAR SEMICOLON
   50           | ID • EQ NUMBER SEMICOLON
   51           | ID • EQ MathStat SEMICOLON
   62 MathStat: ID • BinOp MathStat
   64         | ID •

    EQ        shift, and go to state 24
    LPAREN    shift, and go to state 25
    LBRACKET  shift, and go to state 26
    ADD       shift, and go to state 27
    SUB       shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIV       shift, and go to state 30

    $default  reduce using rule 64 (MathStat)

    BinOp  go to state 31


State 2

   54 WriteStmt: WRITE • ID SEMICOLON

    ID  shift, and go to state 32


State 3

   14 CondStmt: IF • LPAREN Condition RPAREN Block ElseCompt

    LPAREN  shift, and go to state 33


State 4

    8 FunDecl: TYPE • ID LPAREN ParamDeclList RPAREN Block
   36 VarDecl: TYPE • ID SEMICOLON
   37 ArrayDecl: TYPE • ID LBRACKET NUMBER RBRACKET SEMICOLON

    ID  shift, and go to state 34


State 5

   61 MathStat: NUMBER • BinOp MathStat
   63         | NUMBER •

    ADD       shift, and go to state 27
    SUB       shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIV       shift, and go to state 30

    $default  reduce using rule 63 (MathStat)

    BinOp  go to state 35


State 6

    0 $accept: Program • $end

    $end  shift, and go to state 36


State 7

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 8

    2 DeclList: Decl • DeclList
    3         | Decl •

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    IF      shift, and go to state 3
    TYPE    shift, and go to state 4
    NUMBER  shift, and go to state 5

    $default  reduce using rule 3 (DeclList)

    DeclList         go to state 37
    Decl             go to state 8
    FunDecl          go to state 9
    FuncallStmtList  go to state 10
    FuncallStmt      go to state 11
    CondStmtList     go to state 12
    CondStmt         go to state 13
    VarDecl          go to state 14
    ArrayDecl        go to state 15
    StmtList         go to state 16
    Stmt             go to state 17
    AssignStmtList   go to state 18
    AssignStmt       go to state 19
    WriteStmtList    go to state 20
    WriteStmt        go to state 21
    MathStatList     go to state 22
    MathStat         go to state 23


State 9

    4 Decl: FunDecl •

    $default  reduce using rule 4 (Decl)


State 10

   43 Stmt: FuncallStmtList •

    $default  reduce using rule 43 (Stmt)


State 11

    9 FuncallStmtList: FuncallStmt • FuncallStmtList
   10                | FuncallStmt •

    ID  shift, and go to state 38

    ID        [reduce using rule 10 (FuncallStmtList)]
    $default  reduce using rule 10 (FuncallStmtList)

    FuncallStmtList  go to state 39
    FuncallStmt      go to state 11


State 12

   44 Stmt: CondStmtList •

    $default  reduce using rule 44 (Stmt)


State 13

   12 CondStmtList: CondStmt • CondStmtList
   13             | CondStmt •

    IF  shift, and go to state 3

    IF        [reduce using rule 13 (CondStmtList)]
    $default  reduce using rule 13 (CondStmtList)

    CondStmtList  go to state 40
    CondStmt      go to state 13


State 14

    6 Decl: VarDecl •

    $default  reduce using rule 6 (Decl)


State 15

    7 Decl: ArrayDecl •

    $default  reduce using rule 7 (Decl)


State 16

    5 Decl: StmtList •

    $default  reduce using rule 5 (Decl)


State 17

   38 StmtList: Stmt • StmtList
   39         | Stmt •

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    IF      shift, and go to state 3
    NUMBER  shift, and go to state 5

    ID        [reduce using rule 39 (StmtList)]
    WRITE     [reduce using rule 39 (StmtList)]
    IF        [reduce using rule 39 (StmtList)]
    NUMBER    [reduce using rule 39 (StmtList)]
    $default  reduce using rule 39 (StmtList)

    FuncallStmtList  go to state 10
    FuncallStmt      go to state 11
    CondStmtList     go to state 12
    CondStmt         go to state 13
    StmtList         go to state 41
    Stmt             go to state 17
    AssignStmtList   go to state 18
    AssignStmt       go to state 19
    WriteStmtList    go to state 20
    WriteStmt        go to state 21
    MathStatList     go to state 22
    MathStat         go to state 23


State 18

   40 Stmt: AssignStmtList •

    $default  reduce using rule 40 (Stmt)


State 19

   45 AssignStmtList: AssignStmt • AssignStmtList
   46               | AssignStmt •

    ID  shift, and go to state 42

    ID        [reduce using rule 46 (AssignStmtList)]
    $default  reduce using rule 46 (AssignStmtList)

    AssignStmtList  go to state 43
    AssignStmt      go to state 19


State 20

   42 Stmt: WriteStmtList •

    $default  reduce using rule 42 (Stmt)


State 21

   52 WriteStmtList: WriteStmt • WriteStmtList
   53              | WriteStmt •

    WRITE  shift, and go to state 2

    WRITE     [reduce using rule 53 (WriteStmtList)]
    $default  reduce using rule 53 (WriteStmtList)

    WriteStmtList  go to state 44
    WriteStmt      go to state 21


State 22

   41 Stmt: MathStatList •

    $default  reduce using rule 41 (Stmt)


State 23

   59 MathStatList: MathStat • MathStatList
   60             | MathStat •

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 5

    ID        [reduce using rule 60 (MathStatList)]
    NUMBER    [reduce using rule 60 (MathStatList)]
    $default  reduce using rule 60 (MathStatList)

    MathStatList  go to state 46
    MathStat      go to state 23


State 24

   49 AssignStmt: ID EQ • CHAR SEMICOLON
   50           | ID EQ • NUMBER SEMICOLON
   51           | ID EQ • MathStat SEMICOLON

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 47
    CHAR    shift, and go to state 48

    MathStat  go to state 49


State 25

   11 FuncallStmt: ID LPAREN • ParamDeclList RPAREN SEMICOLON

    TYPE  shift, and go to state 50

    TYPE      [reduce using rule 33 (ParamDecl)]
    RPAREN    reduce using rule 29 (ParamDeclList)
    RPAREN    [reduce using rule 33 (ParamDecl)]
    $default  reduce using rule 29 (ParamDeclList)

    ParamDeclList  go to state 51
    ParamDecl      go to state 52


State 26

   47 AssignStmt: ID LBRACKET • NUMBER RBRACKET EQ NUMBER SEMICOLON
   48           | ID LBRACKET • NUMBER RBRACKET EQ CHAR SEMICOLON

    NUMBER  shift, and go to state 53


State 27

   55 BinOp: ADD •

    $default  reduce using rule 55 (BinOp)


State 28

   56 BinOp: SUB •

    $default  reduce using rule 56 (BinOp)


State 29

   57 BinOp: MULTIPLY •

    $default  reduce using rule 57 (BinOp)


State 30

   58 BinOp: DIV •

    $default  reduce using rule 58 (BinOp)


State 31

   62 MathStat: ID BinOp • MathStat

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 5

    MathStat  go to state 54


State 32

   54 WriteStmt: WRITE ID • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 33

   14 CondStmt: IF LPAREN • Condition RPAREN Block ElseCompt

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 5

    Condition     go to state 56
    MathStatList  go to state 57
    MathStat      go to state 23


State 34

    8 FunDecl: TYPE ID • LPAREN ParamDeclList RPAREN Block
   36 VarDecl: TYPE ID • SEMICOLON
   37 ArrayDecl: TYPE ID • LBRACKET NUMBER RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 58
    LPAREN     shift, and go to state 59
    LBRACKET   shift, and go to state 60


State 35

   61 MathStat: NUMBER BinOp • MathStat

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 5

    MathStat  go to state 61


State 36

    0 $accept: Program $end •

    $default  accept


State 37

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 38

   11 FuncallStmt: ID • LPAREN ParamDeclList RPAREN SEMICOLON

    LPAREN  shift, and go to state 25


State 39

    9 FuncallStmtList: FuncallStmt FuncallStmtList •

    $default  reduce using rule 9 (FuncallStmtList)


State 40

   12 CondStmtList: CondStmt CondStmtList •

    $default  reduce using rule 12 (CondStmtList)


State 41

   38 StmtList: Stmt StmtList •

    $default  reduce using rule 38 (StmtList)


State 42

   47 AssignStmt: ID • LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON
   48           | ID • LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON
   49           | ID • EQ CHAR SEMICOLON
   50           | ID • EQ NUMBER SEMICOLON
   51           | ID • EQ MathStat SEMICOLON

    EQ        shift, and go to state 24
    LBRACKET  shift, and go to state 26


State 43

   45 AssignStmtList: AssignStmt AssignStmtList •

    $default  reduce using rule 45 (AssignStmtList)


State 44

   52 WriteStmtList: WriteStmt WriteStmtList •

    $default  reduce using rule 52 (WriteStmtList)


State 45

   62 MathStat: ID • BinOp MathStat
   64         | ID •

    ADD       shift, and go to state 27
    SUB       shift, and go to state 28
    MULTIPLY  shift, and go to state 29
    DIV       shift, and go to state 30

    $default  reduce using rule 64 (MathStat)

    BinOp  go to state 31


State 46

   59 MathStatList: MathStat MathStatList •

    $default  reduce using rule 59 (MathStatList)


State 47

   50 AssignStmt: ID EQ NUMBER • SEMICOLON
   61 MathStat: NUMBER • BinOp MathStat
   63         | NUMBER •

    SEMICOLON  shift, and go to state 62
    ADD        shift, and go to state 27
    SUB        shift, and go to state 28
    MULTIPLY   shift, and go to state 29
    DIV        shift, and go to state 30

    SEMICOLON  [reduce using rule 63 (MathStat)]

    BinOp  go to state 35


State 48

   49 AssignStmt: ID EQ CHAR • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 49

   51 AssignStmt: ID EQ MathStat • SEMICOLON

    SEMICOLON  shift, and go to state 64


State 50

   32 ParamDecl: TYPE • ID

    ID  shift, and go to state 65


State 51

   11 FuncallStmt: ID LPAREN ParamDeclList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 66


State 52

   30 ParamDeclList: ParamDecl • ParamDeclList
   31              | ParamDecl •

    TYPE  shift, and go to state 50

    TYPE      [reduce using rule 33 (ParamDecl)]
    RPAREN    reduce using rule 29 (ParamDeclList)
    RPAREN    [reduce using rule 31 (ParamDeclList)]
    RPAREN    [reduce using rule 33 (ParamDecl)]
    $default  reduce using rule 29 (ParamDeclList)

    ParamDeclList  go to state 67
    ParamDecl      go to state 52


State 53

   47 AssignStmt: ID LBRACKET NUMBER • RBRACKET EQ NUMBER SEMICOLON
   48           | ID LBRACKET NUMBER • RBRACKET EQ CHAR SEMICOLON

    RBRACKET  shift, and go to state 68


State 54

   62 MathStat: ID BinOp MathStat •

    $default  reduce using rule 62 (MathStat)


State 55

   54 WriteStmt: WRITE ID SEMICOLON •

    $default  reduce using rule 54 (WriteStmt)


State 56

   14 CondStmt: IF LPAREN Condition • RPAREN Block ElseCompt

    RPAREN  shift, and go to state 69


State 57

   17 Condition: MathStatList • CompSymbol MathStatList BoolCompt
   18          | MathStatList • BoolCompt

    OR   shift, and go to state 70
    AND  shift, and go to state 71
    LSS  shift, and go to state 72
    GTR  shift, and go to state 73
    LEQ  shift, and go to state 74
    GEQ  shift, and go to state 75
    DEQ  shift, and go to state 76
    NEQ  shift, and go to state 77

    $default  reduce using rule 25 (BoolCompt)

    CompSymbol  go to state 78
    BoolCompt   go to state 79
    BoolOp      go to state 80


State 58

   36 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 36 (VarDecl)


State 59

    8 FunDecl: TYPE ID LPAREN • ParamDeclList RPAREN Block

    TYPE  shift, and go to state 50

    TYPE      [reduce using rule 33 (ParamDecl)]
    RPAREN    reduce using rule 29 (ParamDeclList)
    RPAREN    [reduce using rule 33 (ParamDecl)]
    $default  reduce using rule 29 (ParamDeclList)

    ParamDeclList  go to state 81
    ParamDecl      go to state 52


State 60

   37 ArrayDecl: TYPE ID LBRACKET • NUMBER RBRACKET SEMICOLON

    NUMBER  shift, and go to state 82


State 61

   61 MathStat: NUMBER BinOp MathStat •

    $default  reduce using rule 61 (MathStat)


State 62

   50 AssignStmt: ID EQ NUMBER SEMICOLON •

    $default  reduce using rule 50 (AssignStmt)


State 63

   49 AssignStmt: ID EQ CHAR SEMICOLON •

    $default  reduce using rule 49 (AssignStmt)


State 64

   51 AssignStmt: ID EQ MathStat SEMICOLON •

    $default  reduce using rule 51 (AssignStmt)


State 65

   32 ParamDecl: TYPE ID •

    $default  reduce using rule 32 (ParamDecl)


State 66

   11 FuncallStmt: ID LPAREN ParamDeclList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 83


State 67

   30 ParamDeclList: ParamDecl ParamDeclList •

    $default  reduce using rule 30 (ParamDeclList)


State 68

   47 AssignStmt: ID LBRACKET NUMBER RBRACKET • EQ NUMBER SEMICOLON
   48           | ID LBRACKET NUMBER RBRACKET • EQ CHAR SEMICOLON

    EQ  shift, and go to state 84


State 69

   14 CondStmt: IF LPAREN Condition RPAREN • Block ElseCompt

    LBRACE  shift, and go to state 85

    Block  go to state 86


State 70

   28 BoolOp: OR •

    $default  reduce using rule 28 (BoolOp)


State 71

   27 BoolOp: AND •

    $default  reduce using rule 27 (BoolOp)


State 72

   19 CompSymbol: LSS •

    $default  reduce using rule 19 (CompSymbol)


State 73

   20 CompSymbol: GTR •

    $default  reduce using rule 20 (CompSymbol)


State 74

   21 CompSymbol: LEQ •

    $default  reduce using rule 21 (CompSymbol)


State 75

   22 CompSymbol: GEQ •

    $default  reduce using rule 22 (CompSymbol)


State 76

   23 CompSymbol: DEQ •

    $default  reduce using rule 23 (CompSymbol)


State 77

   24 CompSymbol: NEQ •

    $default  reduce using rule 24 (CompSymbol)


State 78

   17 Condition: MathStatList CompSymbol • MathStatList BoolCompt

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 5

    MathStatList  go to state 87
    MathStat      go to state 23


State 79

   18 Condition: MathStatList BoolCompt •

    $default  reduce using rule 18 (Condition)


State 80

   26 BoolCompt: BoolOp • Condition

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 5

    Condition     go to state 88
    MathStatList  go to state 57
    MathStat      go to state 23


State 81

    8 FunDecl: TYPE ID LPAREN ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 89


State 82

   37 ArrayDecl: TYPE ID LBRACKET NUMBER • RBRACKET SEMICOLON

    RBRACKET  shift, and go to state 90


State 83

   11 FuncallStmt: ID LPAREN ParamDeclList RPAREN SEMICOLON •

    $default  reduce using rule 11 (FuncallStmt)


State 84

   47 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ • NUMBER SEMICOLON
   48           | ID LBRACKET NUMBER RBRACKET EQ • CHAR SEMICOLON

    NUMBER  shift, and go to state 91
    CHAR    shift, and go to state 92


State 85

   34 Block: LBRACE • FunBlock RBRACE

    ID      shift, and go to state 1
    WRITE   shift, and go to state 2
    IF      shift, and go to state 3
    TYPE    shift, and go to state 4
    NUMBER  shift, and go to state 5

    DeclList         go to state 93
    Decl             go to state 8
    FunDecl          go to state 9
    FuncallStmtList  go to state 10
    FuncallStmt      go to state 11
    CondStmtList     go to state 12
    CondStmt         go to state 13
    FunBlock         go to state 94
    VarDecl          go to state 14
    ArrayDecl        go to state 15
    StmtList         go to state 16
    Stmt             go to state 17
    AssignStmtList   go to state 18
    AssignStmt       go to state 19
    WriteStmtList    go to state 20
    WriteStmt        go to state 21
    MathStatList     go to state 22
    MathStat         go to state 23


State 86

   14 CondStmt: IF LPAREN Condition RPAREN Block • ElseCompt

    ELSE  shift, and go to state 95

    $default  reduce using rule 15 (ElseCompt)

    ElseCompt  go to state 96


State 87

   17 Condition: MathStatList CompSymbol MathStatList • BoolCompt

    OR   shift, and go to state 70
    AND  shift, and go to state 71

    $default  reduce using rule 25 (BoolCompt)

    BoolCompt  go to state 97
    BoolOp     go to state 80


State 88

   26 BoolCompt: BoolOp Condition •

    $default  reduce using rule 26 (BoolCompt)


State 89

    8 FunDecl: TYPE ID LPAREN ParamDeclList RPAREN • Block

    LBRACE  shift, and go to state 85

    Block  go to state 98


State 90

   37 ArrayDecl: TYPE ID LBRACKET NUMBER RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 99


State 91

   47 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ NUMBER • SEMICOLON

    SEMICOLON  shift, and go to state 100


State 92

   48 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ CHAR • SEMICOLON

    SEMICOLON  shift, and go to state 101


State 93

   35 FunBlock: DeclList •

    $default  reduce using rule 35 (FunBlock)


State 94

   34 Block: LBRACE FunBlock • RBRACE

    RBRACE  shift, and go to state 102


State 95

   16 ElseCompt: ELSE • Block

    LBRACE  shift, and go to state 85

    Block  go to state 103


State 96

   14 CondStmt: IF LPAREN Condition RPAREN Block ElseCompt •

    $default  reduce using rule 14 (CondStmt)


State 97

   17 Condition: MathStatList CompSymbol MathStatList BoolCompt •

    $default  reduce using rule 17 (Condition)


State 98

    8 FunDecl: TYPE ID LPAREN ParamDeclList RPAREN Block •

    $default  reduce using rule 8 (FunDecl)


State 99

   37 ArrayDecl: TYPE ID LBRACKET NUMBER RBRACKET SEMICOLON •

    $default  reduce using rule 37 (ArrayDecl)


State 100

   47 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ NUMBER SEMICOLON •

    $default  reduce using rule 47 (AssignStmt)


State 101

   48 AssignStmt: ID LBRACKET NUMBER RBRACKET EQ CHAR SEMICOLON •

    $default  reduce using rule 48 (AssignStmt)


State 102

   34 Block: LBRACE FunBlock RBRACE •

    $default  reduce using rule 34 (Block)


State 103

   16 ElseCompt: ELSE Block •

    $default  reduce using rule 16 (ElseCompt)
