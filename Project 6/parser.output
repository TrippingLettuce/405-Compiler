Nonterminals useless in grammar

    ConditionVar


Rules useless in grammar

  106 ConditionVar: NUMBER
  107             | ID
  108             | FLOATNUM
  109             | CHARID


Rules useless in parser due to conflicts

   39 StmtList: Expr


State 0 conflicts: 10 shift/reduce
State 13 conflicts: 10 shift/reduce, 1 reduce/reduce
State 17 conflicts: 4 shift/reduce, 12 reduce/reduce
State 43 conflicts: 12 reduce/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 73 conflicts: 2 shift/reduce
State 104 conflicts: 12 reduce/reduce
State 113 conflicts: 2 shift/reduce
State 163 conflicts: 1 shift/reduce
State 166 conflicts: 9 shift/reduce
State 189 conflicts: 9 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FuncDecl
    5     | VarDecl
    6     | StmtList
    7     | WhileStmt
    8     | IfStmt

    9 $@1: ε

   10 FuncDecl: VOID ID LPAREN $@1 ParamDeclList RPAREN Block

   11 $@2: ε

   12 FuncDecl: INT ID LPAREN $@2 ParamDeclList RPAREN Block

   13 $@3: ε

   14 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList RPAREN Block

   15 $@4: ε

   16 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList RPAREN Block

   17 ParamDeclList: ParamDecl COMMA ParamDeclList
   18              | ParamDecl

   19 ParamDecl: ε
   20          | INT ID
   21          | FLOAT ID
   22          | CHAR ID

   23 ArgDeclList: ArgDecl COMMA ArgDeclList
   24            | ArgDecl

   25 ArgDecl: ε
   26        | NUMBER
   27        | FLOATNUM
   28        | CHARID
   29        | ID

   30 Block: LBRACKET BlockDeclList RBRACKET

   31 BlockDeclList: BlockDecl BlockDeclList
   32              | BlockDecl

   33 BlockDecl: VarDecl
   34          | StmtList
   35          | WhileStmt
   36          | IfStmt

   37 StmtList: ε
   38         | Expr StmtList
   39         | Expr

   40 VarDecl: INT ID SEMICOLON
   41        | ID EQ NUMBER SEMICOLON
   42        | CHAR ID SEMICOLON
   43        | ID EQ CHARID SEMICOLON
   44        | FLOAT ID SEMICOLON
   45        | ID EQ FLOATNUM SEMICOLON
   46        | ID EQ ID SEMICOLON
   47        | IDEQExpr SEMICOLON
   48        | ArrDecl

   49 Expr: SEMICOLON
   50     | ID EQ ID SEMICOLON
   51     | ID EQ ID LPAREN ArgDeclList RPAREN SEMICOLON
   52     | WRITE ID SEMICOLON
   53     | WRITE STRINGID SEMICOLON
   54     | WRITE ID LBRACE NUMBER RBRACE SEMICOLON
   55     | WRITE NEWLINECHAR SEMICOLON
   56     | IDEQExpr SEMICOLON
   57     | ID LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON
   58     | ID LBRACE NUMBER RBRACE EQ Math SEMICOLON
   59     | ID LBRACE NUMBER RBRACE EQ CHARID SEMICOLON
   60     | ID LPAREN ArgDeclList RPAREN SEMICOLON
   61     | RETURN ID SEMICOLON
   62     | RETURN NUMBER SEMICOLON
   63     | RETURN FLOATNUM SEMICOLON
   64     | RETURN CHARID SEMICOLON

   65 IDEQExpr: ID EQ MathStmt

   66 MathStmt: Math MathStmt
   67         | Math

   68 Math: LPAREN
   69     | RPAREN
   70     | ID
   71     | NUMBER
   72     | FLOATNUM
   73     | EXPONENT
   74     | Operator

   75 Operator: ADD
   76         | SUB
   77         | MULTIPLY
   78         | DIV

   79 CompOperator: DEQ
   80             | LT
   81             | GT
   82             | LEQ
   83             | GEQ
   84             | NOTEQ

   85 ArrDecl: INT ID LBRACE RBRACE SEMICOLON
   86        | CHAR ID LBRACE RBRACE SEMICOLON
   87        | INT ID LBRACE NUMBER RBRACE SEMICOLON
   88        | CHAR ID LBRACE NUMBER RBRACE SEMICOLON

   89 $@5: ε

   90 $@6: ε

   91 WhileStmt: WHILE $@5 LPAREN Condition RPAREN $@6 Block

   92 $@7: ε

   93 $@8: ε

   94 $@9: ε

   95 IfStmt: IF $@7 LPAREN Condition RPAREN $@8 Block $@9 ElseStmt

   96 ElseStmt: ε
   97         | ELSE Block

   98 Condition: NUMBER CompOperator NUMBER BoolOpStmt
   99          | ID CompOperator ID BoolOpStmt
  100          | ID CompOperator NUMBER BoolOpStmt
  101          | FLOATNUM CompOperator FLOATNUM BoolOpStmt
  102          | CHARID CompOperator CHARID BoolOpStmt

  103 BoolOpStmt: ε
  104           | AND Condition
  105           | OR Condition


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <string> (258) 14 22 42 86 88
    INT <string> (259) 12 20 40 85 87
    FLOAT <string> (260) 16 21 44
    VOID <string> (261) 10
    IF <string> (262) 95
    ELSE <string> (263) 97
    WHILE <string> (264) 91
    WRITE <string> (265) 52 53 54 55
    RETURN <string> (266) 61 62 63 64
    COMMA <string> (267) 17 23
    SEMICOLON <string> (268) 40 41 42 43 44 45 46 47 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 85 86 87 88
    NEWLINECHAR <string> (269) 55
    DEQ <string> (270) 79
    NOTEQ <string> (271) 84
    LEQ <string> (272) 82
    GEQ <string> (273) 83
    LT <string> (274) 80
    GT <string> (275) 81
    AND <string> (276) 104
    OR <string> (277) 105
    EQ <string> (278) 41 43 45 46 50 51 57 58 59 65
    ADD <string> (279) 75
    MULTIPLY <string> (280) 77
    SUB <string> (281) 76
    DIV <string> (282) 78
    EXPONENT <string> (283) 73
    LPAREN <string> (284) 10 12 14 16 51 60 68 91 95
    RPAREN <string> (285) 10 12 14 16 51 60 69 91 95
    LBRACKET <string> (286) 30
    RBRACKET <string> (287) 30
    LBRACE <string> (288) 54 57 58 59 85 86 87 88
    RBRACE <string> (289) 54 57 58 59 85 86 87 88
    NUMBER <string> (290) 26 41 54 57 58 59 62 71 87 88 98 100
    FLOATNUM <string> (291) 27 45 63 72 101
    STRINGID <string> (292) 53
    CHARID <string> (293) 28 43 59 64 102
    ID <string> (294) 10 12 14 16 20 21 22 29 40 41 42 43 44 45 46 50 51 52 54 57 58 59 60 61 65 70 85 86 87 88 99 100


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    Program <ast> (41)
        on left: 1
        on right: 0
    DeclList <ast> (42)
        on left: 2 3
        on right: 1 2
    Decl <ast> (43)
        on left: 4 5 6 7 8
        on right: 2 3
    FuncDecl <ast> (44)
        on left: 10 12 14 16
        on right: 4
    $@1 (45)
        on left: 9
        on right: 10
    $@2 (46)
        on left: 11
        on right: 12
    $@3 (47)
        on left: 13
        on right: 14
    $@4 (48)
        on left: 15
        on right: 16
    ParamDeclList <ast> (49)
        on left: 17 18
        on right: 10 12 14 16 17
    ParamDecl <ast> (50)
        on left: 19 20 21 22
        on right: 17 18
    ArgDeclList <ast> (51)
        on left: 23 24
        on right: 23 51 60
    ArgDecl <ast> (52)
        on left: 25 26 27 28 29
        on right: 23 24
    Block <ast> (53)
        on left: 30
        on right: 10 12 14 16 91 95 97
    BlockDeclList <ast> (54)
        on left: 31 32
        on right: 30 31
    BlockDecl <ast> (55)
        on left: 33 34 35 36
        on right: 31 32
    StmtList <ast> (56)
        on left: 37 38 39
        on right: 6 34 38
    VarDecl <ast> (57)
        on left: 40 41 42 43 44 45 46 47 48
        on right: 5 33
    Expr <ast> (58)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 38 39
    IDEQExpr <ast> (59)
        on left: 65
        on right: 47 56
    MathStmt <ast> (60)
        on left: 66 67
        on right: 65 66
    Math <ast> (61)
        on left: 68 69 70 71 72 73 74
        on right: 58 66 67
    Operator <ast> (62)
        on left: 75 76 77 78
        on right: 74
    CompOperator <ast> (63)
        on left: 79 80 81 82 83 84
        on right: 98 99 100 101 102
    ArrDecl <ast> (64)
        on left: 85 86 87 88
        on right: 48
    WhileStmt <ast> (65)
        on left: 91
        on right: 7 35
    $@5 (66)
        on left: 89
        on right: 91
    $@6 (67)
        on left: 90
        on right: 91
    IfStmt <ast> (68)
        on left: 95
        on right: 8 36
    $@7 (69)
        on left: 92
        on right: 95
    $@8 (70)
        on left: 93
        on right: 95
    $@9 (71)
        on left: 94
        on right: 95
    ElseStmt <ast> (72)
        on left: 96 97
        on right: 95
    Condition <ast> (73)
        on left: 98 99 100 101 102
        on right: 91 95 104 105
    BoolOpStmt <ast> (74)
        on left: 103 104 105
        on right: 98 99 100 101 102


State 0

    0 $accept: • Program $end

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    VOID       shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    WRITE      shift, and go to state 7
    RETURN     shift, and go to state 8
    SEMICOLON  shift, and go to state 9
    ID         shift, and go to state 10

    CHAR       [reduce using rule 37 (StmtList)]
    INT        [reduce using rule 37 (StmtList)]
    FLOAT      [reduce using rule 37 (StmtList)]
    VOID       [reduce using rule 37 (StmtList)]
    IF         [reduce using rule 37 (StmtList)]
    WHILE      [reduce using rule 37 (StmtList)]
    WRITE      [reduce using rule 37 (StmtList)]
    RETURN     [reduce using rule 37 (StmtList)]
    SEMICOLON  [reduce using rule 37 (StmtList)]
    ID         [reduce using rule 37 (StmtList)]
    $default   reduce using rule 37 (StmtList)

    Program    go to state 11
    DeclList   go to state 12
    Decl       go to state 13
    FuncDecl   go to state 14
    StmtList   go to state 15
    VarDecl    go to state 16
    Expr       go to state 17
    IDEQExpr   go to state 18
    ArrDecl    go to state 19
    WhileStmt  go to state 20
    IfStmt     go to state 21


State 1

   14 FuncDecl: CHAR • ID LPAREN $@3 ParamDeclList RPAREN Block
   42 VarDecl: CHAR • ID SEMICOLON
   86 ArrDecl: CHAR • ID LBRACE RBRACE SEMICOLON
   88        | CHAR • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 22


State 2

   12 FuncDecl: INT • ID LPAREN $@2 ParamDeclList RPAREN Block
   40 VarDecl: INT • ID SEMICOLON
   85 ArrDecl: INT • ID LBRACE RBRACE SEMICOLON
   87        | INT • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 23


State 3

   16 FuncDecl: FLOAT • ID LPAREN $@4 ParamDeclList RPAREN Block
   44 VarDecl: FLOAT • ID SEMICOLON

    ID  shift, and go to state 24


State 4

   10 FuncDecl: VOID • ID LPAREN $@1 ParamDeclList RPAREN Block

    ID  shift, and go to state 25


State 5

   95 IfStmt: IF • $@7 LPAREN Condition RPAREN $@8 Block $@9 ElseStmt

    $default  reduce using rule 92 ($@7)

    $@7  go to state 26


State 6

   91 WhileStmt: WHILE • $@5 LPAREN Condition RPAREN $@6 Block

    $default  reduce using rule 89 ($@5)

    $@5  go to state 27


State 7

   52 Expr: WRITE • ID SEMICOLON
   53     | WRITE • STRINGID SEMICOLON
   54     | WRITE • ID LBRACE NUMBER RBRACE SEMICOLON
   55     | WRITE • NEWLINECHAR SEMICOLON

    NEWLINECHAR  shift, and go to state 28
    STRINGID     shift, and go to state 29
    ID           shift, and go to state 30


State 8

   61 Expr: RETURN • ID SEMICOLON
   62     | RETURN • NUMBER SEMICOLON
   63     | RETURN • FLOATNUM SEMICOLON
   64     | RETURN • CHARID SEMICOLON

    NUMBER    shift, and go to state 31
    FLOATNUM  shift, and go to state 32
    CHARID    shift, and go to state 33
    ID        shift, and go to state 34


State 9

   49 Expr: SEMICOLON •

    $default  reduce using rule 49 (Expr)


State 10

   41 VarDecl: ID • EQ NUMBER SEMICOLON
   43        | ID • EQ CHARID SEMICOLON
   45        | ID • EQ FLOATNUM SEMICOLON
   46        | ID • EQ ID SEMICOLON
   50 Expr: ID • EQ ID SEMICOLON
   51     | ID • EQ ID LPAREN ArgDeclList RPAREN SEMICOLON
   57     | ID • LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON
   58     | ID • LBRACE NUMBER RBRACE EQ Math SEMICOLON
   59     | ID • LBRACE NUMBER RBRACE EQ CHARID SEMICOLON
   60     | ID • LPAREN ArgDeclList RPAREN SEMICOLON
   65 IDEQExpr: ID • EQ MathStmt

    EQ      shift, and go to state 35
    LPAREN  shift, and go to state 36
    LBRACE  shift, and go to state 37


State 11

    0 $accept: Program • $end

    $end  shift, and go to state 38


State 12

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 13

    2 DeclList: Decl • DeclList
    3         | Decl •

    CHAR       shift, and go to state 1
    INT        shift, and go to state 2
    FLOAT      shift, and go to state 3
    VOID       shift, and go to state 4
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    WRITE      shift, and go to state 7
    RETURN     shift, and go to state 8
    SEMICOLON  shift, and go to state 9
    ID         shift, and go to state 10

    $end       reduce using rule 3 (DeclList)
    $end       [reduce using rule 37 (StmtList)]
    CHAR       [reduce using rule 37 (StmtList)]
    INT        [reduce using rule 37 (StmtList)]
    FLOAT      [reduce using rule 37 (StmtList)]
    VOID       [reduce using rule 37 (StmtList)]
    IF         [reduce using rule 37 (StmtList)]
    WHILE      [reduce using rule 37 (StmtList)]
    WRITE      [reduce using rule 37 (StmtList)]
    RETURN     [reduce using rule 37 (StmtList)]
    SEMICOLON  [reduce using rule 37 (StmtList)]
    ID         [reduce using rule 37 (StmtList)]
    $default   reduce using rule 3 (DeclList)

    DeclList   go to state 39
    Decl       go to state 13
    FuncDecl   go to state 14
    StmtList   go to state 15
    VarDecl    go to state 16
    Expr       go to state 17
    IDEQExpr   go to state 18
    ArrDecl    go to state 19
    WhileStmt  go to state 20
    IfStmt     go to state 21


State 14

    4 Decl: FuncDecl •

    $default  reduce using rule 4 (Decl)


State 15

    6 Decl: StmtList •

    $default  reduce using rule 6 (Decl)


State 16

    5 Decl: VarDecl •

    $default  reduce using rule 5 (Decl)


State 17

   38 StmtList: Expr • StmtList
   39         | Expr •

    WRITE      shift, and go to state 7
    RETURN     shift, and go to state 8
    SEMICOLON  shift, and go to state 9
    ID         shift, and go to state 40

    $end       reduce using rule 37 (StmtList)
    $end       [reduce using rule 39 (StmtList)]
    CHAR       reduce using rule 37 (StmtList)
    CHAR       [reduce using rule 39 (StmtList)]
    INT        reduce using rule 37 (StmtList)
    INT        [reduce using rule 39 (StmtList)]
    FLOAT      reduce using rule 37 (StmtList)
    FLOAT      [reduce using rule 39 (StmtList)]
    VOID       reduce using rule 37 (StmtList)
    VOID       [reduce using rule 39 (StmtList)]
    IF         reduce using rule 37 (StmtList)
    IF         [reduce using rule 39 (StmtList)]
    WHILE      reduce using rule 37 (StmtList)
    WHILE      [reduce using rule 39 (StmtList)]
    WRITE      [reduce using rule 37 (StmtList)]
    WRITE      [reduce using rule 39 (StmtList)]
    RETURN     [reduce using rule 37 (StmtList)]
    RETURN     [reduce using rule 39 (StmtList)]
    SEMICOLON  [reduce using rule 37 (StmtList)]
    SEMICOLON  [reduce using rule 39 (StmtList)]
    RBRACKET   reduce using rule 37 (StmtList)
    RBRACKET   [reduce using rule 39 (StmtList)]
    ID         [reduce using rule 37 (StmtList)]
    ID         [reduce using rule 39 (StmtList)]
    $default   reduce using rule 37 (StmtList)

    StmtList  go to state 41
    Expr      go to state 17
    IDEQExpr  go to state 42


State 18

   47 VarDecl: IDEQExpr • SEMICOLON
   56 Expr: IDEQExpr • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 19

   48 VarDecl: ArrDecl •

    $default  reduce using rule 48 (VarDecl)


State 20

    7 Decl: WhileStmt •

    $default  reduce using rule 7 (Decl)


State 21

    8 Decl: IfStmt •

    $default  reduce using rule 8 (Decl)


State 22

   14 FuncDecl: CHAR ID • LPAREN $@3 ParamDeclList RPAREN Block
   42 VarDecl: CHAR ID • SEMICOLON
   86 ArrDecl: CHAR ID • LBRACE RBRACE SEMICOLON
   88        | CHAR ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 44
    LPAREN     shift, and go to state 45
    LBRACE     shift, and go to state 46


State 23

   12 FuncDecl: INT ID • LPAREN $@2 ParamDeclList RPAREN Block
   40 VarDecl: INT ID • SEMICOLON
   85 ArrDecl: INT ID • LBRACE RBRACE SEMICOLON
   87        | INT ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 47
    LPAREN     shift, and go to state 48
    LBRACE     shift, and go to state 49


State 24

   16 FuncDecl: FLOAT ID • LPAREN $@4 ParamDeclList RPAREN Block
   44 VarDecl: FLOAT ID • SEMICOLON

    SEMICOLON  shift, and go to state 50
    LPAREN     shift, and go to state 51


State 25

   10 FuncDecl: VOID ID • LPAREN $@1 ParamDeclList RPAREN Block

    LPAREN  shift, and go to state 52


State 26

   95 IfStmt: IF $@7 • LPAREN Condition RPAREN $@8 Block $@9 ElseStmt

    LPAREN  shift, and go to state 53


State 27

   91 WhileStmt: WHILE $@5 • LPAREN Condition RPAREN $@6 Block

    LPAREN  shift, and go to state 54


State 28

   55 Expr: WRITE NEWLINECHAR • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 29

   53 Expr: WRITE STRINGID • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 30

   52 Expr: WRITE ID • SEMICOLON
   54     | WRITE ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 57
    LBRACE     shift, and go to state 58


State 31

   62 Expr: RETURN NUMBER • SEMICOLON

    SEMICOLON  shift, and go to state 59


State 32

   63 Expr: RETURN FLOATNUM • SEMICOLON

    SEMICOLON  shift, and go to state 60


State 33

   64 Expr: RETURN CHARID • SEMICOLON

    SEMICOLON  shift, and go to state 61


State 34

   61 Expr: RETURN ID • SEMICOLON

    SEMICOLON  shift, and go to state 62


State 35

   41 VarDecl: ID EQ • NUMBER SEMICOLON
   43        | ID EQ • CHARID SEMICOLON
   45        | ID EQ • FLOATNUM SEMICOLON
   46        | ID EQ • ID SEMICOLON
   50 Expr: ID EQ • ID SEMICOLON
   51     | ID EQ • ID LPAREN ArgDeclList RPAREN SEMICOLON
   65 IDEQExpr: ID EQ • MathStmt

    ADD       shift, and go to state 63
    MULTIPLY  shift, and go to state 64
    SUB       shift, and go to state 65
    DIV       shift, and go to state 66
    EXPONENT  shift, and go to state 67
    LPAREN    shift, and go to state 68
    RPAREN    shift, and go to state 69
    NUMBER    shift, and go to state 70
    FLOATNUM  shift, and go to state 71
    CHARID    shift, and go to state 72
    ID        shift, and go to state 73

    MathStmt  go to state 74
    Math      go to state 75
    Operator  go to state 76


State 36

   60 Expr: ID LPAREN • ArgDeclList RPAREN SEMICOLON

    NUMBER    shift, and go to state 77
    FLOATNUM  shift, and go to state 78
    CHARID    shift, and go to state 79
    ID        shift, and go to state 80

    $default  reduce using rule 25 (ArgDecl)

    ArgDeclList  go to state 81
    ArgDecl      go to state 82


State 37

   57 Expr: ID LBRACE • NUMBER RBRACE EQ NUMBER SEMICOLON
   58     | ID LBRACE • NUMBER RBRACE EQ Math SEMICOLON
   59     | ID LBRACE • NUMBER RBRACE EQ CHARID SEMICOLON

    NUMBER  shift, and go to state 83


State 38

    0 $accept: Program $end •

    $default  accept


State 39

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 40

   50 Expr: ID • EQ ID SEMICOLON
   51     | ID • EQ ID LPAREN ArgDeclList RPAREN SEMICOLON
   57     | ID • LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON
   58     | ID • LBRACE NUMBER RBRACE EQ Math SEMICOLON
   59     | ID • LBRACE NUMBER RBRACE EQ CHARID SEMICOLON
   60     | ID • LPAREN ArgDeclList RPAREN SEMICOLON
   65 IDEQExpr: ID • EQ MathStmt

    EQ      shift, and go to state 84
    LPAREN  shift, and go to state 36
    LBRACE  shift, and go to state 37


State 41

   38 StmtList: Expr StmtList •

    $default  reduce using rule 38 (StmtList)


State 42

   56 Expr: IDEQExpr • SEMICOLON

    SEMICOLON  shift, and go to state 85


State 43

   47 VarDecl: IDEQExpr SEMICOLON •
   56 Expr: IDEQExpr SEMICOLON •

    $end       reduce using rule 47 (VarDecl)
    $end       [reduce using rule 56 (Expr)]
    CHAR       reduce using rule 47 (VarDecl)
    CHAR       [reduce using rule 56 (Expr)]
    INT        reduce using rule 47 (VarDecl)
    INT        [reduce using rule 56 (Expr)]
    FLOAT      reduce using rule 47 (VarDecl)
    FLOAT      [reduce using rule 56 (Expr)]
    VOID       reduce using rule 47 (VarDecl)
    VOID       [reduce using rule 56 (Expr)]
    IF         reduce using rule 47 (VarDecl)
    IF         [reduce using rule 56 (Expr)]
    WHILE      reduce using rule 47 (VarDecl)
    WHILE      [reduce using rule 56 (Expr)]
    WRITE      reduce using rule 47 (VarDecl)
    WRITE      [reduce using rule 56 (Expr)]
    RETURN     reduce using rule 47 (VarDecl)
    RETURN     [reduce using rule 56 (Expr)]
    SEMICOLON  reduce using rule 47 (VarDecl)
    SEMICOLON  [reduce using rule 56 (Expr)]
    RBRACKET   reduce using rule 47 (VarDecl)
    RBRACKET   [reduce using rule 56 (Expr)]
    ID         reduce using rule 47 (VarDecl)
    ID         [reduce using rule 56 (Expr)]
    $default   reduce using rule 47 (VarDecl)


State 44

   42 VarDecl: CHAR ID SEMICOLON •

    $default  reduce using rule 42 (VarDecl)


State 45

   14 FuncDecl: CHAR ID LPAREN • $@3 ParamDeclList RPAREN Block

    $default  reduce using rule 13 ($@3)

    $@3  go to state 86


State 46

   86 ArrDecl: CHAR ID LBRACE • RBRACE SEMICOLON
   88        | CHAR ID LBRACE • NUMBER RBRACE SEMICOLON

    RBRACE  shift, and go to state 87
    NUMBER  shift, and go to state 88


State 47

   40 VarDecl: INT ID SEMICOLON •

    $default  reduce using rule 40 (VarDecl)


State 48

   12 FuncDecl: INT ID LPAREN • $@2 ParamDeclList RPAREN Block

    $default  reduce using rule 11 ($@2)

    $@2  go to state 89


State 49

   85 ArrDecl: INT ID LBRACE • RBRACE SEMICOLON
   87        | INT ID LBRACE • NUMBER RBRACE SEMICOLON

    RBRACE  shift, and go to state 90
    NUMBER  shift, and go to state 91


State 50

   44 VarDecl: FLOAT ID SEMICOLON •

    $default  reduce using rule 44 (VarDecl)


State 51

   16 FuncDecl: FLOAT ID LPAREN • $@4 ParamDeclList RPAREN Block

    $default  reduce using rule 15 ($@4)

    $@4  go to state 92


State 52

   10 FuncDecl: VOID ID LPAREN • $@1 ParamDeclList RPAREN Block

    $default  reduce using rule 9 ($@1)

    $@1  go to state 93


State 53

   95 IfStmt: IF $@7 LPAREN • Condition RPAREN $@8 Block $@9 ElseStmt

    NUMBER    shift, and go to state 94
    FLOATNUM  shift, and go to state 95
    CHARID    shift, and go to state 96
    ID        shift, and go to state 97

    Condition  go to state 98


State 54

   91 WhileStmt: WHILE $@5 LPAREN • Condition RPAREN $@6 Block

    NUMBER    shift, and go to state 94
    FLOATNUM  shift, and go to state 95
    CHARID    shift, and go to state 96
    ID        shift, and go to state 97

    Condition  go to state 99


State 55

   55 Expr: WRITE NEWLINECHAR SEMICOLON •

    $default  reduce using rule 55 (Expr)


State 56

   53 Expr: WRITE STRINGID SEMICOLON •

    $default  reduce using rule 53 (Expr)


State 57

   52 Expr: WRITE ID SEMICOLON •

    $default  reduce using rule 52 (Expr)


State 58

   54 Expr: WRITE ID LBRACE • NUMBER RBRACE SEMICOLON

    NUMBER  shift, and go to state 100


State 59

   62 Expr: RETURN NUMBER SEMICOLON •

    $default  reduce using rule 62 (Expr)


State 60

   63 Expr: RETURN FLOATNUM SEMICOLON •

    $default  reduce using rule 63 (Expr)


State 61

   64 Expr: RETURN CHARID SEMICOLON •

    $default  reduce using rule 64 (Expr)


State 62

   61 Expr: RETURN ID SEMICOLON •

    $default  reduce using rule 61 (Expr)


State 63

   75 Operator: ADD •

    $default  reduce using rule 75 (Operator)


State 64

   77 Operator: MULTIPLY •

    $default  reduce using rule 77 (Operator)


State 65

   76 Operator: SUB •

    $default  reduce using rule 76 (Operator)


State 66

   78 Operator: DIV •

    $default  reduce using rule 78 (Operator)


State 67

   73 Math: EXPONENT •

    $default  reduce using rule 73 (Math)


State 68

   68 Math: LPAREN •

    $default  reduce using rule 68 (Math)


State 69

   69 Math: RPAREN •

    $default  reduce using rule 69 (Math)


State 70

   41 VarDecl: ID EQ NUMBER • SEMICOLON
   71 Math: NUMBER •

    SEMICOLON  shift, and go to state 101

    SEMICOLON  [reduce using rule 71 (Math)]
    $default   reduce using rule 71 (Math)


State 71

   45 VarDecl: ID EQ FLOATNUM • SEMICOLON
   72 Math: FLOATNUM •

    SEMICOLON  shift, and go to state 102

    SEMICOLON  [reduce using rule 72 (Math)]
    $default   reduce using rule 72 (Math)


State 72

   43 VarDecl: ID EQ CHARID • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 73

   46 VarDecl: ID EQ ID • SEMICOLON
   50 Expr: ID EQ ID • SEMICOLON
   51     | ID EQ ID • LPAREN ArgDeclList RPAREN SEMICOLON
   70 Math: ID •

    SEMICOLON  shift, and go to state 104
    LPAREN     shift, and go to state 105

    SEMICOLON  [reduce using rule 70 (Math)]
    LPAREN     [reduce using rule 70 (Math)]
    $default   reduce using rule 70 (Math)


State 74

   65 IDEQExpr: ID EQ MathStmt •

    $default  reduce using rule 65 (IDEQExpr)


State 75

   66 MathStmt: Math • MathStmt
   67         | Math •

    ADD       shift, and go to state 63
    MULTIPLY  shift, and go to state 64
    SUB       shift, and go to state 65
    DIV       shift, and go to state 66
    EXPONENT  shift, and go to state 67
    LPAREN    shift, and go to state 68
    RPAREN    shift, and go to state 69
    NUMBER    shift, and go to state 106
    FLOATNUM  shift, and go to state 107
    ID        shift, and go to state 108

    $default  reduce using rule 67 (MathStmt)

    MathStmt  go to state 109
    Math      go to state 75
    Operator  go to state 76


State 76

   74 Math: Operator •

    $default  reduce using rule 74 (Math)


State 77

   26 ArgDecl: NUMBER •

    $default  reduce using rule 26 (ArgDecl)


State 78

   27 ArgDecl: FLOATNUM •

    $default  reduce using rule 27 (ArgDecl)


State 79

   28 ArgDecl: CHARID •

    $default  reduce using rule 28 (ArgDecl)


State 80

   29 ArgDecl: ID •

    $default  reduce using rule 29 (ArgDecl)


State 81

   60 Expr: ID LPAREN ArgDeclList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 110


State 82

   23 ArgDeclList: ArgDecl • COMMA ArgDeclList
   24            | ArgDecl •

    COMMA  shift, and go to state 111

    $default  reduce using rule 24 (ArgDeclList)


State 83

   57 Expr: ID LBRACE NUMBER • RBRACE EQ NUMBER SEMICOLON
   58     | ID LBRACE NUMBER • RBRACE EQ Math SEMICOLON
   59     | ID LBRACE NUMBER • RBRACE EQ CHARID SEMICOLON

    RBRACE  shift, and go to state 112


State 84

   50 Expr: ID EQ • ID SEMICOLON
   51     | ID EQ • ID LPAREN ArgDeclList RPAREN SEMICOLON
   65 IDEQExpr: ID EQ • MathStmt

    ADD       shift, and go to state 63
    MULTIPLY  shift, and go to state 64
    SUB       shift, and go to state 65
    DIV       shift, and go to state 66
    EXPONENT  shift, and go to state 67
    LPAREN    shift, and go to state 68
    RPAREN    shift, and go to state 69
    NUMBER    shift, and go to state 106
    FLOATNUM  shift, and go to state 107
    ID        shift, and go to state 113

    MathStmt  go to state 74
    Math      go to state 75
    Operator  go to state 76


State 85

   56 Expr: IDEQExpr SEMICOLON •

    $default  reduce using rule 56 (Expr)


State 86

   14 FuncDecl: CHAR ID LPAREN $@3 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 114
    INT    shift, and go to state 115
    FLOAT  shift, and go to state 116

    $default  reduce using rule 19 (ParamDecl)

    ParamDeclList  go to state 117
    ParamDecl      go to state 118


State 87

   86 ArrDecl: CHAR ID LBRACE RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 119


State 88

   88 ArrDecl: CHAR ID LBRACE NUMBER • RBRACE SEMICOLON

    RBRACE  shift, and go to state 120


State 89

   12 FuncDecl: INT ID LPAREN $@2 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 114
    INT    shift, and go to state 115
    FLOAT  shift, and go to state 116

    $default  reduce using rule 19 (ParamDecl)

    ParamDeclList  go to state 121
    ParamDecl      go to state 118


State 90

   85 ArrDecl: INT ID LBRACE RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 122


State 91

   87 ArrDecl: INT ID LBRACE NUMBER • RBRACE SEMICOLON

    RBRACE  shift, and go to state 123


State 92

   16 FuncDecl: FLOAT ID LPAREN $@4 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 114
    INT    shift, and go to state 115
    FLOAT  shift, and go to state 116

    $default  reduce using rule 19 (ParamDecl)

    ParamDeclList  go to state 124
    ParamDecl      go to state 118


State 93

   10 FuncDecl: VOID ID LPAREN $@1 • ParamDeclList RPAREN Block

    CHAR   shift, and go to state 114
    INT    shift, and go to state 115
    FLOAT  shift, and go to state 116

    $default  reduce using rule 19 (ParamDecl)

    ParamDeclList  go to state 125
    ParamDecl      go to state 118


State 94

   98 Condition: NUMBER • CompOperator NUMBER BoolOpStmt

    DEQ    shift, and go to state 126
    NOTEQ  shift, and go to state 127
    LEQ    shift, and go to state 128
    GEQ    shift, and go to state 129
    LT     shift, and go to state 130
    GT     shift, and go to state 131

    CompOperator  go to state 132


State 95

  101 Condition: FLOATNUM • CompOperator FLOATNUM BoolOpStmt

    DEQ    shift, and go to state 126
    NOTEQ  shift, and go to state 127
    LEQ    shift, and go to state 128
    GEQ    shift, and go to state 129
    LT     shift, and go to state 130
    GT     shift, and go to state 131

    CompOperator  go to state 133


State 96

  102 Condition: CHARID • CompOperator CHARID BoolOpStmt

    DEQ    shift, and go to state 126
    NOTEQ  shift, and go to state 127
    LEQ    shift, and go to state 128
    GEQ    shift, and go to state 129
    LT     shift, and go to state 130
    GT     shift, and go to state 131

    CompOperator  go to state 134


State 97

   99 Condition: ID • CompOperator ID BoolOpStmt
  100          | ID • CompOperator NUMBER BoolOpStmt

    DEQ    shift, and go to state 126
    NOTEQ  shift, and go to state 127
    LEQ    shift, and go to state 128
    GEQ    shift, and go to state 129
    LT     shift, and go to state 130
    GT     shift, and go to state 131

    CompOperator  go to state 135


State 98

   95 IfStmt: IF $@7 LPAREN Condition • RPAREN $@8 Block $@9 ElseStmt

    RPAREN  shift, and go to state 136


State 99

   91 WhileStmt: WHILE $@5 LPAREN Condition • RPAREN $@6 Block

    RPAREN  shift, and go to state 137


State 100

   54 Expr: WRITE ID LBRACE NUMBER • RBRACE SEMICOLON

    RBRACE  shift, and go to state 138


State 101

   41 VarDecl: ID EQ NUMBER SEMICOLON •

    $default  reduce using rule 41 (VarDecl)


State 102

   45 VarDecl: ID EQ FLOATNUM SEMICOLON •

    $default  reduce using rule 45 (VarDecl)


State 103

   43 VarDecl: ID EQ CHARID SEMICOLON •

    $default  reduce using rule 43 (VarDecl)


State 104

   46 VarDecl: ID EQ ID SEMICOLON •
   50 Expr: ID EQ ID SEMICOLON •

    $end       reduce using rule 46 (VarDecl)
    $end       [reduce using rule 50 (Expr)]
    CHAR       reduce using rule 46 (VarDecl)
    CHAR       [reduce using rule 50 (Expr)]
    INT        reduce using rule 46 (VarDecl)
    INT        [reduce using rule 50 (Expr)]
    FLOAT      reduce using rule 46 (VarDecl)
    FLOAT      [reduce using rule 50 (Expr)]
    VOID       reduce using rule 46 (VarDecl)
    VOID       [reduce using rule 50 (Expr)]
    IF         reduce using rule 46 (VarDecl)
    IF         [reduce using rule 50 (Expr)]
    WHILE      reduce using rule 46 (VarDecl)
    WHILE      [reduce using rule 50 (Expr)]
    WRITE      reduce using rule 46 (VarDecl)
    WRITE      [reduce using rule 50 (Expr)]
    RETURN     reduce using rule 46 (VarDecl)
    RETURN     [reduce using rule 50 (Expr)]
    SEMICOLON  reduce using rule 46 (VarDecl)
    SEMICOLON  [reduce using rule 50 (Expr)]
    RBRACKET   reduce using rule 46 (VarDecl)
    RBRACKET   [reduce using rule 50 (Expr)]
    ID         reduce using rule 46 (VarDecl)
    ID         [reduce using rule 50 (Expr)]
    $default   reduce using rule 46 (VarDecl)


State 105

   51 Expr: ID EQ ID LPAREN • ArgDeclList RPAREN SEMICOLON

    NUMBER    shift, and go to state 77
    FLOATNUM  shift, and go to state 78
    CHARID    shift, and go to state 79
    ID        shift, and go to state 80

    $default  reduce using rule 25 (ArgDecl)

    ArgDeclList  go to state 139
    ArgDecl      go to state 82


State 106

   71 Math: NUMBER •

    $default  reduce using rule 71 (Math)


State 107

   72 Math: FLOATNUM •

    $default  reduce using rule 72 (Math)


State 108

   70 Math: ID •

    $default  reduce using rule 70 (Math)


State 109

   66 MathStmt: Math MathStmt •

    $default  reduce using rule 66 (MathStmt)


State 110

   60 Expr: ID LPAREN ArgDeclList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 140


State 111

   23 ArgDeclList: ArgDecl COMMA • ArgDeclList

    NUMBER    shift, and go to state 77
    FLOATNUM  shift, and go to state 78
    CHARID    shift, and go to state 79
    ID        shift, and go to state 80

    $default  reduce using rule 25 (ArgDecl)

    ArgDeclList  go to state 141
    ArgDecl      go to state 82


State 112

   57 Expr: ID LBRACE NUMBER RBRACE • EQ NUMBER SEMICOLON
   58     | ID LBRACE NUMBER RBRACE • EQ Math SEMICOLON
   59     | ID LBRACE NUMBER RBRACE • EQ CHARID SEMICOLON

    EQ  shift, and go to state 142


State 113

   50 Expr: ID EQ ID • SEMICOLON
   51     | ID EQ ID • LPAREN ArgDeclList RPAREN SEMICOLON
   70 Math: ID •

    SEMICOLON  shift, and go to state 143
    LPAREN     shift, and go to state 105

    SEMICOLON  [reduce using rule 70 (Math)]
    LPAREN     [reduce using rule 70 (Math)]
    $default   reduce using rule 70 (Math)


State 114

   22 ParamDecl: CHAR • ID

    ID  shift, and go to state 144


State 115

   20 ParamDecl: INT • ID

    ID  shift, and go to state 145


State 116

   21 ParamDecl: FLOAT • ID

    ID  shift, and go to state 146


State 117

   14 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 147


State 118

   17 ParamDeclList: ParamDecl • COMMA ParamDeclList
   18              | ParamDecl •

    COMMA  shift, and go to state 148

    $default  reduce using rule 18 (ParamDeclList)


State 119

   86 ArrDecl: CHAR ID LBRACE RBRACE SEMICOLON •

    $default  reduce using rule 86 (ArrDecl)


State 120

   88 ArrDecl: CHAR ID LBRACE NUMBER RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 149


State 121

   12 FuncDecl: INT ID LPAREN $@2 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 150


State 122

   85 ArrDecl: INT ID LBRACE RBRACE SEMICOLON •

    $default  reduce using rule 85 (ArrDecl)


State 123

   87 ArrDecl: INT ID LBRACE NUMBER RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 151


State 124

   16 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 152


State 125

   10 FuncDecl: VOID ID LPAREN $@1 ParamDeclList • RPAREN Block

    RPAREN  shift, and go to state 153


State 126

   79 CompOperator: DEQ •

    $default  reduce using rule 79 (CompOperator)


State 127

   84 CompOperator: NOTEQ •

    $default  reduce using rule 84 (CompOperator)


State 128

   82 CompOperator: LEQ •

    $default  reduce using rule 82 (CompOperator)


State 129

   83 CompOperator: GEQ •

    $default  reduce using rule 83 (CompOperator)


State 130

   80 CompOperator: LT •

    $default  reduce using rule 80 (CompOperator)


State 131

   81 CompOperator: GT •

    $default  reduce using rule 81 (CompOperator)


State 132

   98 Condition: NUMBER CompOperator • NUMBER BoolOpStmt

    NUMBER  shift, and go to state 154


State 133

  101 Condition: FLOATNUM CompOperator • FLOATNUM BoolOpStmt

    FLOATNUM  shift, and go to state 155


State 134

  102 Condition: CHARID CompOperator • CHARID BoolOpStmt

    CHARID  shift, and go to state 156


State 135

   99 Condition: ID CompOperator • ID BoolOpStmt
  100          | ID CompOperator • NUMBER BoolOpStmt

    NUMBER  shift, and go to state 157
    ID      shift, and go to state 158


State 136

   95 IfStmt: IF $@7 LPAREN Condition RPAREN • $@8 Block $@9 ElseStmt

    $default  reduce using rule 93 ($@8)

    $@8  go to state 159


State 137

   91 WhileStmt: WHILE $@5 LPAREN Condition RPAREN • $@6 Block

    $default  reduce using rule 90 ($@6)

    $@6  go to state 160


State 138

   54 Expr: WRITE ID LBRACE NUMBER RBRACE • SEMICOLON

    SEMICOLON  shift, and go to state 161


State 139

   51 Expr: ID EQ ID LPAREN ArgDeclList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 162


State 140

   60 Expr: ID LPAREN ArgDeclList RPAREN SEMICOLON •

    $default  reduce using rule 60 (Expr)


State 141

   23 ArgDeclList: ArgDecl COMMA ArgDeclList •

    $default  reduce using rule 23 (ArgDeclList)


State 142

   57 Expr: ID LBRACE NUMBER RBRACE EQ • NUMBER SEMICOLON
   58     | ID LBRACE NUMBER RBRACE EQ • Math SEMICOLON
   59     | ID LBRACE NUMBER RBRACE EQ • CHARID SEMICOLON

    ADD       shift, and go to state 63
    MULTIPLY  shift, and go to state 64
    SUB       shift, and go to state 65
    DIV       shift, and go to state 66
    EXPONENT  shift, and go to state 67
    LPAREN    shift, and go to state 68
    RPAREN    shift, and go to state 69
    NUMBER    shift, and go to state 163
    FLOATNUM  shift, and go to state 107
    CHARID    shift, and go to state 164
    ID        shift, and go to state 108

    Math      go to state 165
    Operator  go to state 76


State 143

   50 Expr: ID EQ ID SEMICOLON •

    $default  reduce using rule 50 (Expr)


State 144

   22 ParamDecl: CHAR ID •

    $default  reduce using rule 22 (ParamDecl)


State 145

   20 ParamDecl: INT ID •

    $default  reduce using rule 20 (ParamDecl)


State 146

   21 ParamDecl: FLOAT ID •

    $default  reduce using rule 21 (ParamDecl)


State 147

   14 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 166

    Block  go to state 167


State 148

   17 ParamDeclList: ParamDecl COMMA • ParamDeclList

    CHAR   shift, and go to state 114
    INT    shift, and go to state 115
    FLOAT  shift, and go to state 116

    $default  reduce using rule 19 (ParamDecl)

    ParamDeclList  go to state 168
    ParamDecl      go to state 118


State 149

   88 ArrDecl: CHAR ID LBRACE NUMBER RBRACE SEMICOLON •

    $default  reduce using rule 88 (ArrDecl)


State 150

   12 FuncDecl: INT ID LPAREN $@2 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 166

    Block  go to state 169


State 151

   87 ArrDecl: INT ID LBRACE NUMBER RBRACE SEMICOLON •

    $default  reduce using rule 87 (ArrDecl)


State 152

   16 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 166

    Block  go to state 170


State 153

   10 FuncDecl: VOID ID LPAREN $@1 ParamDeclList RPAREN • Block

    LBRACKET  shift, and go to state 166

    Block  go to state 171


State 154

   98 Condition: NUMBER CompOperator NUMBER • BoolOpStmt

    AND  shift, and go to state 172
    OR   shift, and go to state 173

    $default  reduce using rule 103 (BoolOpStmt)

    BoolOpStmt  go to state 174


State 155

  101 Condition: FLOATNUM CompOperator FLOATNUM • BoolOpStmt

    AND  shift, and go to state 172
    OR   shift, and go to state 173

    $default  reduce using rule 103 (BoolOpStmt)

    BoolOpStmt  go to state 175


State 156

  102 Condition: CHARID CompOperator CHARID • BoolOpStmt

    AND  shift, and go to state 172
    OR   shift, and go to state 173

    $default  reduce using rule 103 (BoolOpStmt)

    BoolOpStmt  go to state 176


State 157

  100 Condition: ID CompOperator NUMBER • BoolOpStmt

    AND  shift, and go to state 172
    OR   shift, and go to state 173

    $default  reduce using rule 103 (BoolOpStmt)

    BoolOpStmt  go to state 177


State 158

   99 Condition: ID CompOperator ID • BoolOpStmt

    AND  shift, and go to state 172
    OR   shift, and go to state 173

    $default  reduce using rule 103 (BoolOpStmt)

    BoolOpStmt  go to state 178


State 159

   95 IfStmt: IF $@7 LPAREN Condition RPAREN $@8 • Block $@9 ElseStmt

    LBRACKET  shift, and go to state 166

    Block  go to state 179


State 160

   91 WhileStmt: WHILE $@5 LPAREN Condition RPAREN $@6 • Block

    LBRACKET  shift, and go to state 166

    Block  go to state 180


State 161

   54 Expr: WRITE ID LBRACE NUMBER RBRACE SEMICOLON •

    $default  reduce using rule 54 (Expr)


State 162

   51 Expr: ID EQ ID LPAREN ArgDeclList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 181


State 163

   57 Expr: ID LBRACE NUMBER RBRACE EQ NUMBER • SEMICOLON
   71 Math: NUMBER •

    SEMICOLON  shift, and go to state 182

    SEMICOLON  [reduce using rule 71 (Math)]


State 164

   59 Expr: ID LBRACE NUMBER RBRACE EQ CHARID • SEMICOLON

    SEMICOLON  shift, and go to state 183


State 165

   58 Expr: ID LBRACE NUMBER RBRACE EQ Math • SEMICOLON

    SEMICOLON  shift, and go to state 184


State 166

   30 Block: LBRACKET • BlockDeclList RBRACKET

    CHAR       shift, and go to state 185
    INT        shift, and go to state 186
    FLOAT      shift, and go to state 187
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    WRITE      shift, and go to state 7
    RETURN     shift, and go to state 8
    SEMICOLON  shift, and go to state 9
    ID         shift, and go to state 10

    CHAR       [reduce using rule 37 (StmtList)]
    INT        [reduce using rule 37 (StmtList)]
    FLOAT      [reduce using rule 37 (StmtList)]
    IF         [reduce using rule 37 (StmtList)]
    WHILE      [reduce using rule 37 (StmtList)]
    WRITE      [reduce using rule 37 (StmtList)]
    RETURN     [reduce using rule 37 (StmtList)]
    SEMICOLON  [reduce using rule 37 (StmtList)]
    ID         [reduce using rule 37 (StmtList)]
    $default   reduce using rule 37 (StmtList)

    BlockDeclList  go to state 188
    BlockDecl      go to state 189
    StmtList       go to state 190
    VarDecl        go to state 191
    Expr           go to state 17
    IDEQExpr       go to state 18
    ArrDecl        go to state 19
    WhileStmt      go to state 192
    IfStmt         go to state 193


State 167

   14 FuncDecl: CHAR ID LPAREN $@3 ParamDeclList RPAREN Block •

    $default  reduce using rule 14 (FuncDecl)


State 168

   17 ParamDeclList: ParamDecl COMMA ParamDeclList •

    $default  reduce using rule 17 (ParamDeclList)


State 169

   12 FuncDecl: INT ID LPAREN $@2 ParamDeclList RPAREN Block •

    $default  reduce using rule 12 (FuncDecl)


State 170

   16 FuncDecl: FLOAT ID LPAREN $@4 ParamDeclList RPAREN Block •

    $default  reduce using rule 16 (FuncDecl)


State 171

   10 FuncDecl: VOID ID LPAREN $@1 ParamDeclList RPAREN Block •

    $default  reduce using rule 10 (FuncDecl)


State 172

  104 BoolOpStmt: AND • Condition

    NUMBER    shift, and go to state 94
    FLOATNUM  shift, and go to state 95
    CHARID    shift, and go to state 96
    ID        shift, and go to state 97

    Condition  go to state 194


State 173

  105 BoolOpStmt: OR • Condition

    NUMBER    shift, and go to state 94
    FLOATNUM  shift, and go to state 95
    CHARID    shift, and go to state 96
    ID        shift, and go to state 97

    Condition  go to state 195


State 174

   98 Condition: NUMBER CompOperator NUMBER BoolOpStmt •

    $default  reduce using rule 98 (Condition)


State 175

  101 Condition: FLOATNUM CompOperator FLOATNUM BoolOpStmt •

    $default  reduce using rule 101 (Condition)


State 176

  102 Condition: CHARID CompOperator CHARID BoolOpStmt •

    $default  reduce using rule 102 (Condition)


State 177

  100 Condition: ID CompOperator NUMBER BoolOpStmt •

    $default  reduce using rule 100 (Condition)


State 178

   99 Condition: ID CompOperator ID BoolOpStmt •

    $default  reduce using rule 99 (Condition)


State 179

   95 IfStmt: IF $@7 LPAREN Condition RPAREN $@8 Block • $@9 ElseStmt

    $default  reduce using rule 94 ($@9)

    $@9  go to state 196


State 180

   91 WhileStmt: WHILE $@5 LPAREN Condition RPAREN $@6 Block •

    $default  reduce using rule 91 (WhileStmt)


State 181

   51 Expr: ID EQ ID LPAREN ArgDeclList RPAREN SEMICOLON •

    $default  reduce using rule 51 (Expr)


State 182

   57 Expr: ID LBRACE NUMBER RBRACE EQ NUMBER SEMICOLON •

    $default  reduce using rule 57 (Expr)


State 183

   59 Expr: ID LBRACE NUMBER RBRACE EQ CHARID SEMICOLON •

    $default  reduce using rule 59 (Expr)


State 184

   58 Expr: ID LBRACE NUMBER RBRACE EQ Math SEMICOLON •

    $default  reduce using rule 58 (Expr)


State 185

   42 VarDecl: CHAR • ID SEMICOLON
   86 ArrDecl: CHAR • ID LBRACE RBRACE SEMICOLON
   88        | CHAR • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 197


State 186

   40 VarDecl: INT • ID SEMICOLON
   85 ArrDecl: INT • ID LBRACE RBRACE SEMICOLON
   87        | INT • ID LBRACE NUMBER RBRACE SEMICOLON

    ID  shift, and go to state 198


State 187

   44 VarDecl: FLOAT • ID SEMICOLON

    ID  shift, and go to state 199


State 188

   30 Block: LBRACKET BlockDeclList • RBRACKET

    RBRACKET  shift, and go to state 200


State 189

   31 BlockDeclList: BlockDecl • BlockDeclList
   32              | BlockDecl •

    CHAR       shift, and go to state 185
    INT        shift, and go to state 186
    FLOAT      shift, and go to state 187
    IF         shift, and go to state 5
    WHILE      shift, and go to state 6
    WRITE      shift, and go to state 7
    RETURN     shift, and go to state 8
    SEMICOLON  shift, and go to state 9
    ID         shift, and go to state 10

    CHAR       [reduce using rule 37 (StmtList)]
    INT        [reduce using rule 37 (StmtList)]
    FLOAT      [reduce using rule 37 (StmtList)]
    IF         [reduce using rule 37 (StmtList)]
    WHILE      [reduce using rule 37 (StmtList)]
    WRITE      [reduce using rule 37 (StmtList)]
    RETURN     [reduce using rule 37 (StmtList)]
    SEMICOLON  [reduce using rule 37 (StmtList)]
    RBRACKET   reduce using rule 32 (BlockDeclList)
    RBRACKET   [reduce using rule 37 (StmtList)]
    ID         [reduce using rule 37 (StmtList)]
    $default   reduce using rule 32 (BlockDeclList)

    BlockDeclList  go to state 201
    BlockDecl      go to state 189
    StmtList       go to state 190
    VarDecl        go to state 191
    Expr           go to state 17
    IDEQExpr       go to state 18
    ArrDecl        go to state 19
    WhileStmt      go to state 192
    IfStmt         go to state 193


State 190

   34 BlockDecl: StmtList •

    $default  reduce using rule 34 (BlockDecl)


State 191

   33 BlockDecl: VarDecl •

    $default  reduce using rule 33 (BlockDecl)


State 192

   35 BlockDecl: WhileStmt •

    $default  reduce using rule 35 (BlockDecl)


State 193

   36 BlockDecl: IfStmt •

    $default  reduce using rule 36 (BlockDecl)


State 194

  104 BoolOpStmt: AND Condition •

    $default  reduce using rule 104 (BoolOpStmt)


State 195

  105 BoolOpStmt: OR Condition •

    $default  reduce using rule 105 (BoolOpStmt)


State 196

   95 IfStmt: IF $@7 LPAREN Condition RPAREN $@8 Block $@9 • ElseStmt

    ELSE  shift, and go to state 202

    $default  reduce using rule 96 (ElseStmt)

    ElseStmt  go to state 203


State 197

   42 VarDecl: CHAR ID • SEMICOLON
   86 ArrDecl: CHAR ID • LBRACE RBRACE SEMICOLON
   88        | CHAR ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 44
    LBRACE     shift, and go to state 46


State 198

   40 VarDecl: INT ID • SEMICOLON
   85 ArrDecl: INT ID • LBRACE RBRACE SEMICOLON
   87        | INT ID • LBRACE NUMBER RBRACE SEMICOLON

    SEMICOLON  shift, and go to state 47
    LBRACE     shift, and go to state 49


State 199

   44 VarDecl: FLOAT ID • SEMICOLON

    SEMICOLON  shift, and go to state 50


State 200

   30 Block: LBRACKET BlockDeclList RBRACKET •

    $default  reduce using rule 30 (Block)


State 201

   31 BlockDeclList: BlockDecl BlockDeclList •

    $default  reduce using rule 31 (BlockDeclList)


State 202

   97 ElseStmt: ELSE • Block

    LBRACKET  shift, and go to state 166

    Block  go to state 204


State 203

   95 IfStmt: IF $@7 LPAREN Condition RPAREN $@8 Block $@9 ElseStmt •

    $default  reduce using rule 95 (IfStmt)


State 204

   97 ElseStmt: ELSE Block •

    $default  reduce using rule 97 (ElseStmt)
