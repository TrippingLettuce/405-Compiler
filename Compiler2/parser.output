Terminals unused in grammar

    OP


State 0 conflicts: 4 shift/reduce
State 7 conflicts: 4 shift/reduce, 1 reduce/reduce
State 10 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: VarDecl
    5     | StmtList

    6 VarDecl: TYPE ID SEMICOLON

    7 StmtList: ε
    8         | Stmt StmtList

    9 Stmt: SEMICOLON
   10     | Expr SEMICOLON

   11 Expr: ID
   12     | ID EQ ID
   13     | ID EQ NUMBER
   14     | WRITE LPAR ID RPAR SEMICOLON
   15     | ID EQ BinOpExp

   16 BinOpExp: Value BinOp Value
   17         | Value BinOp BinOpExp

   18 Value: ID
   19      | NUMBER

   20 BinOp: PLUS
   21      | MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 6
    ID <string> (259) 6 11 12 13 14 15 18
    SEMICOLON <char> (260) 6 9 10 14
    EQ <char> (261) 12 13 15
    OP <char> (262)
    NUMBER <number> (263) 13 19
    WRITE <string> (264) 14
    PLUS <char> (265) 20
    MINUS <char> (266) 21
    LPAR <char> (267) 14
    RPAR <char> (268) 14


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    Program <ast> (15)
        on left: 1
        on right: 0
    DeclList <ast> (16)
        on left: 2 3
        on right: 1 2
    Decl <ast> (17)
        on left: 4 5
        on right: 2 3
    VarDecl <ast> (18)
        on left: 6
        on right: 4
    StmtList <ast> (19)
        on left: 7 8
        on right: 5 8
    Stmt <ast> (20)
        on left: 9 10
        on right: 8
    Expr <ast> (21)
        on left: 11 12 13 14 15
        on right: 10
    BinOpExp (22)
        on left: 16 17
        on right: 15 17
    Value (23)
        on left: 18 19
        on right: 16 17
    BinOp (24)
        on left: 20 21
        on right: 16 17


State 0

    0 $accept: • Program $end

    TYPE       shift, and go to state 1
    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    WRITE      shift, and go to state 4

    TYPE       [reduce using rule 7 (StmtList)]
    ID         [reduce using rule 7 (StmtList)]
    SEMICOLON  [reduce using rule 7 (StmtList)]
    WRITE      [reduce using rule 7 (StmtList)]
    $default   reduce using rule 7 (StmtList)

    Program   go to state 5
    DeclList  go to state 6
    Decl      go to state 7
    VarDecl   go to state 8
    StmtList  go to state 9
    Stmt      go to state 10
    Expr      go to state 11


State 1

    6 VarDecl: TYPE • ID SEMICOLON

    ID  shift, and go to state 12


State 2

   11 Expr: ID •
   12     | ID • EQ ID
   13     | ID • EQ NUMBER
   15     | ID • EQ BinOpExp

    EQ  shift, and go to state 13

    $default  reduce using rule 11 (Expr)


State 3

    9 Stmt: SEMICOLON •

    $default  reduce using rule 9 (Stmt)


State 4

   14 Expr: WRITE • LPAR ID RPAR SEMICOLON

    LPAR  shift, and go to state 14


State 5

    0 $accept: Program • $end

    $end  shift, and go to state 15


State 6

    1 Program: DeclList •

    $default  reduce using rule 1 (Program)


State 7

    2 DeclList: Decl • DeclList
    3         | Decl •

    TYPE       shift, and go to state 1
    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    WRITE      shift, and go to state 4

    $end       reduce using rule 3 (DeclList)
    $end       [reduce using rule 7 (StmtList)]
    TYPE       [reduce using rule 7 (StmtList)]
    ID         [reduce using rule 7 (StmtList)]
    SEMICOLON  [reduce using rule 7 (StmtList)]
    WRITE      [reduce using rule 7 (StmtList)]
    $default   reduce using rule 3 (DeclList)

    DeclList  go to state 16
    Decl      go to state 7
    VarDecl   go to state 8
    StmtList  go to state 9
    Stmt      go to state 10
    Expr      go to state 11


State 8

    4 Decl: VarDecl •

    $default  reduce using rule 4 (Decl)


State 9

    5 Decl: StmtList •

    $default  reduce using rule 5 (Decl)


State 10

    8 StmtList: Stmt • StmtList

    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    WRITE      shift, and go to state 4

    ID         [reduce using rule 7 (StmtList)]
    SEMICOLON  [reduce using rule 7 (StmtList)]
    WRITE      [reduce using rule 7 (StmtList)]
    $default   reduce using rule 7 (StmtList)

    StmtList  go to state 17
    Stmt      go to state 10
    Expr      go to state 11


State 11

   10 Stmt: Expr • SEMICOLON

    SEMICOLON  shift, and go to state 18


State 12

    6 VarDecl: TYPE ID • SEMICOLON

    SEMICOLON  shift, and go to state 19


State 13

   12 Expr: ID EQ • ID
   13     | ID EQ • NUMBER
   15     | ID EQ • BinOpExp

    ID      shift, and go to state 20
    NUMBER  shift, and go to state 21

    BinOpExp  go to state 22
    Value     go to state 23


State 14

   14 Expr: WRITE LPAR • ID RPAR SEMICOLON

    ID  shift, and go to state 24


State 15

    0 $accept: Program $end •

    $default  accept


State 16

    2 DeclList: Decl DeclList •

    $default  reduce using rule 2 (DeclList)


State 17

    8 StmtList: Stmt StmtList •

    $default  reduce using rule 8 (StmtList)


State 18

   10 Stmt: Expr SEMICOLON •

    $default  reduce using rule 10 (Stmt)


State 19

    6 VarDecl: TYPE ID SEMICOLON •

    $default  reduce using rule 6 (VarDecl)


State 20

   12 Expr: ID EQ ID •
   18 Value: ID •

    SEMICOLON  reduce using rule 12 (Expr)
    $default   reduce using rule 18 (Value)


State 21

   13 Expr: ID EQ NUMBER •
   19 Value: NUMBER •

    SEMICOLON  reduce using rule 13 (Expr)
    $default   reduce using rule 19 (Value)


State 22

   15 Expr: ID EQ BinOpExp •

    $default  reduce using rule 15 (Expr)


State 23

   16 BinOpExp: Value • BinOp Value
   17         | Value • BinOp BinOpExp

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    BinOp  go to state 27


State 24

   14 Expr: WRITE LPAR ID • RPAR SEMICOLON

    RPAR  shift, and go to state 28


State 25

   20 BinOp: PLUS •

    $default  reduce using rule 20 (BinOp)


State 26

   21 BinOp: MINUS •

    $default  reduce using rule 21 (BinOp)


State 27

   16 BinOpExp: Value BinOp • Value
   17         | Value BinOp • BinOpExp

    ID      shift, and go to state 29
    NUMBER  shift, and go to state 30

    BinOpExp  go to state 31
    Value     go to state 32


State 28

   14 Expr: WRITE LPAR ID RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 29

   18 Value: ID •

    $default  reduce using rule 18 (Value)


State 30

   19 Value: NUMBER •

    $default  reduce using rule 19 (Value)


State 31

   17 BinOpExp: Value BinOp BinOpExp •

    $default  reduce using rule 17 (BinOpExp)


State 32

   16 BinOpExp: Value • BinOp Value
   16         | Value BinOp Value •
   17         | Value • BinOp BinOpExp

    PLUS   shift, and go to state 25
    MINUS  shift, and go to state 26

    $default  reduce using rule 16 (BinOpExp)

    BinOp  go to state 27


State 33

   14 Expr: WRITE LPAR ID RPAR SEMICOLON •

    $default  reduce using rule 14 (Expr)
